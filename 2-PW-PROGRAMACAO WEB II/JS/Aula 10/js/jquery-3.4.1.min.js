/ *! jQuery v3.2.1 | (c) JS Foundation e outros colaboradores | jquery.org/license * /
! function (a, b) {"use strict"; "object" == typeof module && "object" == typeof module.exports? module.exports? module.exports = a.document? b (a,! 0): function (a) {if (! a.document) lança novo erro ("jQuery requer uma janela com um documento"); retorne b (a)}: b (a)} ("indefinido"! = tipo de janela? window: this, function ( a, b) {"use strict"; var c = [], d = a.document, e = Object.getPrototypeOf, f = c.slice, g = c.concat, h = c.push, i = c. indexOf, j = {}, k = j.toString, l = j.hasOwnProperty, m = l.toString, n = m.call (Objeto), o = {}; função p (a, b) {b = b || d; var c = b.createElement ("script"); c.text = a, b.head.appendChild (c) .parentNode.removeChild (c)} var q = "3.2.1", r = function (a, b) {retornar novo r.fn.init (a, b)}, s = / ^ [\ s \ uFEFF \ xA0] + | [\ s \ uFEFF \ xA0] + $ / g, t = / ^ -ms - /, u = / - ([az]) / g, v = função (a, b) {return b.toUpperCase ()}; r.fn = r.prototype = {jquery: q, construtor: r, comprimento:0, toArray: function () {return f.call (this)}, get: function (a) {return null == a? F.call (this): a <0? This [a + this.length]: this [a]}, pushStack: function (a) {var b = r.merge (this.constructor (), a); return b.prevObject = this, b}, cada um: function (a) {return r.each (this, a)}, map: function (a) {return this.pushStack (r.map (this, function (b, c) {retorna a.call (b, c, b)}))}, fatia: function () {return this.pushStack (f.apply (this, argumentos))}, primeiro: function () {return this.eq (0)}, last: function () {return this.eq (-1)} , eq: function (a) {var b = this.length, c = + a + (a <0? b: 0); retorna this.pushStack (c> = 0 && c <b? [this [c]]: [] )}, fim: function () {retorna this.prevObject || this.constructor ()}, pressiona: h, classifica: c.sort, emenda: c.splice}, r.extend = r.fn.extend = function () {var a, b, c, d, e, f, g = argumentos [0] || {}, h = 1, i = argumentos.length, j =! 1; for ("booleano" == typeof g && (j = g, g = argumentos [h] || {}, h ++), "objeto "== tipo de g || r.isFunção (g) || (g = {}), h === i && (g = isto, h -); h <i; h ++) if (null! = ( a = argumentos [h])) para (b em a) c = g [b], d = a [b], g! == d && (j && d && (r.isPlainObject (d) || (e = Array.isArray (d)))? (e? (e =! 1, f = c && Array.isArray (c)? c: []): f = c && r.isPlainObject (c)? c: {}, g [b] = r .extend (j, f, d)): void 0! == d && (g [b] = d)); return g}, r.extend ({expando: "jQuery" + (q + Math.random () ) .replace (/ \ D / g, ""), isReady:! 0, erro: function (a) {lança novo erro (a)}, noop: function () {}, isFunction: function (a) {return "function" === r.type (a)}, isWindow: function (a) {return null! = a && a === a.window}, isNumeric: function (a) {var b = r.type (a) ; return ("number" === b || "string" === b) &&! isNaN (a-parseFloat (a))}, isPlainObject: function (a) {var b, c; return! (! a || "[objeto Objeto]"! == k.call (a)) && (!(b = e (a)) || (c = l.call (b, "construtor") && b.constructor, "function" == tipo de c && m.call (c) === n))}, isEmptyObject: function (a) {var b; para (b em a) return! 1; return! 0}, digite: function (a) {return null == a? a + "": "objeto" == tipo de a || "função "== tipo de a? j [k.call (a)] ||" objeto ": tipo de a}, globalEval: function (a) {p (a)}, camelCase: function (a) {return a.replace ( t, "ms -"). substitua (u, v)}, cada um: function (a, b) {var c, d = 0; if (w (a)) {for (c = a.length; d < c; d ++) if (b.call (a [d], d, a [d]) === 1) break} else for (d em a) if (b.call (a [d], d, a [d]) === 1) break; return a}, trim: function (a) {return null == a? "" :( a + ""). replace (s, "")}, makeArray: function (a, b) {var c = b || []; return null! = a && (w (Object (a))? r.merge (c, "string" == tipo de a? [a]: a) : h.call (c, a)), c}, inArray: function (a, b,c) {return null == b? -1: i.call (b, a, c)}, mesclagem: function (a, b) {for (var c = + b.length, d = 0, e = a .length; d <c; d ++) a [e ++] = b [d]; retorna a.length = e, a}, grep: function (a, b, c) {for (var d, e = [], f = 0, g = a.length, h =! c; f <g; f ++) d =! b (a [f], f), d! == h && e.push (a [f]); return e }, map: function (a, b, c) {var d, e, f = 0, h = []; if (w (a)) for (d = comprimento.a; f <d; f ++) e = b (a [f], f, c), nulo! = e && h.push (e); caso contrário, para (f em a) e = b (a [f], f, c), nulo! = e && h.push ( e); return g.apply ([], h)}, guid: 1, proxy: function (a, b) {var c, d, e; if ("string" == typeof b && (c = a [b ], b = a, a = c), r.isFunction (a)) retorna d = f.call (argumentos, 2), e = function () {retorna a.apply (b || this, d.concat ( f.call (argumentos)))}, e.guid = a.guid = a.guid || r.guid ++, e}, agora: Date.now, support: o}), "function" == typeof Symbol && ( r.fn [Symbol.iterator] = c [Symbol.iterator]), r.each ("Booleano Número String Função Matriz Data RegExp Objeto Símbolo de erro ".split (" "), function (a, b) {j [" [object "+ b +"] "] = b.toLowerCase ()}); function w (a ) {var b = !! a && "length" em um && a.length, c = r.type (a); return "function"! == c &&! r.isWindow (a) && ("array" === c | | 0 === b || "número" == tipo de b && b> 0 && b-1 em a)} var x = função (a) {var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "chiar" + 1 * nova data, v = a.document, w = 0, x = 0, y = ha () , z = ha (), A = ha (), B = função (a, b) {retorna a === b && (l =! 0), 0}, C = {}. hasOwnProperty, D = [], E = D.pop, F = D.push, G = D.push, H = D.slice, I = função (a, b) {for (var c = 0, d = a.length; c <d; c ++) if (a [c] === b) retorna c; return-1}, J = "verificado | selecionado | assíncrono | foco automático | reprodução automática | controles | adiar | desativado | oculto | ismap | loop | múltiplo | aberto | somente leitura | necessário | escopo ", K =" [\\ x20 \\ t \\ r \\ n \ \ f] ", L =" (?: \\\\. | [\\ w-] | [^ \ 0 - \\ xa0]) + ", M =" \\ ["+ K +" * (" + L + ") (?:" + K + "* ([* ^ $ |! ~]? =)" + K + "* (?: '((?: \\\\. | [^ \\\\' ]) *) '| \ "((?: \\\\. | [^ \\\\\"]) *) \ "| (" + L + ")) |)" + K + "* \\] ", N =" :( "+ L +") (?: \\ ((('((?: \\\\. | [^ \\\\']) *) ') *)' | \ "((?: \\\\. | [^ \\\\\ "]) *) \") | ((?: \\\\. | [^ \\\\ () [\\]] | "+ M +" ) *) |. *) \\) |) ", O = novo RegExp (K +" + "," g "), P = novo RegExp (" ^ "+ K +" + | ((?: ^ | [^ \\\\]) (?: \\\\.) *) "+ K +" + $ "," g "), Q = novo RegExp (" ^ "+ K +" *, "+ K +" * ") , R = novo RegExp ("^" + K + "* ([> + ~] |"+ K + ")" + K + "*"), S = novo RegExp ("=" + K + "* ([^ \\] '\"] *?) "+ K +" * \\] "," g " ), T = novo RegExp (N), U = novo RegExp ("^" + L + "$"), V = {ID: novo RegExp ("^ # (" + L + ")"), CLASS: new RegExp ( "^ \\. (" + L + ")"), TAG: novo RegExp ("^ (" + L + "| [*])"), ATTR: novo RegExp ("^" + M), PSEUDO: novo RegExp ("^" + N), CHILD: new RegExp ("^ :( somente | primeiro | último | enésimo | enésimo-último) - (filho | do tipo) (?: \\ (" + K + "* (par | ímpar | (([+ -] |) (\\ d *) n |) "+ K +" * (?: ([+ -] |) "+ K +" * (\\ d +) |)) "+ K + "* \\) |)", "i"), bool: new RegExp ("^ (?:" + J + ") $", "i"), needsContext: new RegExp ("^" + K + "* [> + ~] |: (par | ímpar | eq | gt | lt | enésimo | primeiro | último) (?: \\ ("+ K +" * ((?: - \\ d)? \\ d *) "+ K +" * \\) |) (? = [^ -] | $) ","i")}, W = / ^ (?: input | select | textarea | button) $ / i, X = / ^ h \ d $ / i, Y = / ^ [^ {] + \ {\ s * \ [nativo \ w /, Z = / ^ (?: # ([\ w -] +) | (\ w +) | \. ([\ w -] +)) $ /, $ = / [+ ~]] /, _ = new RegExp ("\\\\ ([\\ da-f] {1,6}" + K + "? | (" + K + ") |.)", "ig"), aa = função (a, b, c) {var d = "0x" + b-65536; retornar d! == d || c? b: d <0? String.fromCharCode (d + 65536): String.fromCharCode (d> > 10 | 55296,1023 & d | 56320)}, ba = / ([\ 0- \ x1f \ x7f] | ^ -? \ D) | ^ - $ | [^ \ 0- \ x1f \ x7f- \ uFFFF \ w -] / g, ca = função (a, b) {retornar b? "\ 0" === a? "\ ufffd": a.slice (0, -1) + "\\" + a.charCodeAt ( a.length-1) .toString (16) + "": "\\" + a}, da = função () {m ()}, ea = ta (função (a) {return a.disabled === ! 0 && ("form" em um || "label" em a)}, {dir: "parentNode", próximo: "legend"}); tente {G.apply (D = H.call (v.childNodes), v.childNodes), D [v.childNodes.length].nodeType} catch (fa) {G = {apply: D.length? function (a, b) {F.apply (a, H.call (b))}: function (a, b) {var c = a. comprimento, d = 0; while (a [c ++] = b [d ++]); a.length = c-1}}} função ga (a, b, d, e) {var f, h, j, k, l, o, r, s = b && b.ownerDocument, w = b? b.nodeType: 9; if (d = d || [], "string"! = tipo de a ||! a || 1! == w && 9 ! == w && 11! == w) return d; if (! e && ((b? b.ownerDocument || b: v)! == n && m (b), b = b || n, p)) {if ( 11! == w && (l = Z.exec (a))) if (f = l [1]) {if (9 === w) {if (! (J = b.getElementById (f))) return d; if (j.id === f) retorna d.push (j), d} else if (s && (j = s.getElementById (f)) && t (b, j) && j.id === f) return d.push (j), d} else {if (l [2]) return G.apply (d, b.getElementsByTagName (a)), d; if ((f = l [3]) && c.getElementsByClassName && b. getElementsByClassName) retorna G.apply (d, b.getElementsByClassName (f)), d} if (c.qsa &&! A [a + ""] && (! q ||! q.teste (a))) {if (1! == w) s = b, r = a; caso contrário, if ("object"! == b.nodeName.toLowerCase ()) {(k = b.getAttribute ("id "))? k = k.replace (ba, ca): b.setAttribute (" id ", k = u), o = g (a), h = o.length; while (h -) o [h ] = "#" + k + "" + sa (o [h]); r = o.join (","), s = $. test (a) && qa (b.parentNode) || b} if (r ) tente {return G.apply (d, s.querySelectorAll (r)), d} catch (x) {} finalmente {k === u && b.removeAttribute ("id")}}} return i (a.replace ( P, "$ 1"), b, d, e)} função ha () {var a = []; função b (c, e) {retorna a.push (c + "")> d.cacheLength && delete b [a. shift ()], b [c + ""] = e} retornar b} função ia (a) {retornar a [u] =! 0, a} função ja (a) {var b = n.createElement ("fieldset" ); tente {return !! a (b)} catch (c) {return! 1} finalmente {b.parentNode && b.parentNode.removeChild (b), b = null}} função ka (a, b) {var c = a.split ("|"), e = c.comprimento; while (e -) d.attrHandle [c [e]] = b} função la (a, b) {var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex -b.sourceIndex; if (d) return d; if (c) while (c = c.nextSibling) if (c === b) return-1; return a? 1: -1} função ma (a) { função de retorno (b) {var c = b.nodeName.toLowerCase (); return "input" === c && b.type === a}} função na (a) {função de retorno (b) {var c = b. nodeName.toLowerCase (); return ("input" === c || "button" === c) && b.type === a}} função oa (a) {função de retorno (b) {return "form" em b? b.parentNode && b.disabled ===! 1? "label" em b? "label" em b.parentNode? b.parentNode.disabled === a: b.disabled === a: b.isDisabled = == a || b.isDisabled! ==! a && ea (b) === a: b.disabled === a: "label" em b && b.disabled === a}} função pa (a) {return ia (função (b) {retornar b = + b,ia (função (c, d) {var e, f = a ([], c.length, b), g = f.length; while (g -) c [e = f [g]] && (c [e] =! (d [e] = c [e]))})})} função qa (a) {retorna um && "indefinido"! = tipo de a.getElementsByTagName && a} c = ga.support = {}, f = ga.isXML = função (a) {var b = a && (a.ownerDocument || a) .documentElement; return !! b && "HTML"! == b.nodeName}, m = ga.setDocument = function (a) {var b, e, g = a? a.ownerDocument || a: v; return g! == n && 9 === g.nodeType && g.documentElement? (n = g, o = n.documentElement, p =! f ( n), v! == n && (e = n.defaultView) && e.top! == e && (e.addEventListener? e.addEventListener ("descarregar", da,! 1): e.attachEvent && e.attachEvent ("onunload" , da)), c.attributes = ja (function (a) {return a.className = "i",! a.getAttribute ("className")}), c.getElementsByTagName = ja (function (a) {return a .appendChild (n.createComment ("")) ,! a.getElementsByTagName ("*"). length}), c.getElementsByClassName = Y.test (n.getElementsByClassName), c.getById = ja (function (a) {return o.appendChild ( a) .id = u,! n.getElementsByName ||! n.getElementsByName (u) .length}), c.getById? (d.filter.ID = function (a) {var b = a.replace (_, aa); return function (a) {return a.getAttribute ("id") === b}}, d.find.ID = function (a, b) {if ("undefined"! = tipo de b.getElementById && p) (var c = b.getElementById (a); return c? [c]: []}}) :( d.filter.ID = function (a) {var b = a.replace (_, aa); return function (a) {var c = "indefinido"! = tipo de a.getAttributeNode && a.getAttributeNode ("id"); retornar c && c.value === b}}, d.find.ID = function (a, b) {if ( "undefined"! = tipo de b.getElementById && p) {var c, d, e, f = b.getElementById (a); if (f) {if (c = f.getAttributeNode ("id"),c && c.value === a) return [f]; e = b.getElementsByName (a), d = 0; while (f = e [d ++]) if (c = f.getAttributeNode ("id"), c && c. valor === a) retornar [f]} retornar []}}), d.find.TAG = função c.getElementsByTagName? (a, b) {retornar "indefinido"! = tipo de b.getElementsByTagName? b.getElementsByTagName ( a): c.qsa? b.querySelectorAll (a): void 0}: function (a, b) {var c, d = [], e = 0, f = b.getElementsByTagName (a); if ("* "=== a) {while (c = f [e ++]) 1 === c.nodeType && d.push (c); retorno d} retorno f}, d.find.CLASS = c.getElementsByClassName && function (a, b) {if ("indefinido"! = tipo de b.getElementsByClassName && p) retorna b.getElementsByClassName (a)}, r = [], q = [], (c.qsa = Y.test (n.querySelectorAll)) && (ja ( função (a) {o.appendChild (a) .innerHTML = "<a id='"+u+"'> </a> <selecione id = '" + u + "- \ r \\' msallowcapture = ''> <opção selecionada =' '> </option> </select> ", a.querySelectorAll (" [msallowcapture ^ =' '] "). length && q.push (" [* ^ $] = "+ K +" * (?: '' | \ "\") "), a.querySelectorAll (" [selected] "). length || q.push (" \\ ["+ K +" * (?: valor | "+ J +" ) "), a.querySelectorAll (" [id ~ = "+ u +" -] "). length || q.push (" ~ = "), a.querySelectorAll (": marcado "). length || q. push (": marcado"), a.querySelectorAll ("a #" + u + "+ *"). length || q.push (". #. + [+ ~]")}), ja (function (a) {a.innerHTML = "<a href='' disabled='disabled'> </a> <select disabled = 'disabled'> <opção /> </select>"; var b = n.createElement ("input" ); b.setAttribute ("type", "oculto "), a.appendChild (b) .setAttribute (" nome "," D "), a.querySelectorAll (" [name = d] "). length && q.push (" name "+ K +" * [* ^ $ |! ~]? = "), 2! == a.querySelectorAll (": enabled "). Length && q.push (": enabled ",": disabled "), o.appendChild (a) .disabled =! 0, 2! == a.querySelectorAll (": disabled"). Length && q.push (": enabled", ": disabled"), a.querySelectorAll ("* ,: x"), q.push (",. *: ")})), (c.matchesSelector = Y.test (s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja (function (a) {c .disconnectedMatch = s.call (a, "*"), s.call (a, "[s! = '']: x"), r.push ("! =", N)}), q = q .length && new RegExp (q.join ("|")), r = r.length && new RegExp (r.junção ("|")), b = Y.test (o.compareDocumentPosition), t = b || Y.test (o.contains)? function (a, b) {var c = 9 === a.nodeType Você pode usar o seguinte código: a.documentElement: a, d = b &&b.parentNode; return a === d ||! (! d || 1! == d.nodeType ||! (c. contém? c.contains (d): a .compareDocumentPosition && 16 & a.compareDocumentPosition (d)))}: function (a, b) {if (b) while (b = b.parentNode) if (b === a) return! 0; return! 1}, B = b ? function (a, b) {if (a === b) retorna l =! 0,0; var d =! a.compareDocumentPosition-! b.compareDocumentPosition; retorna d? d: (d = (a.ownerDocument | | a) === (documento do proprietário || b)? a.compareDocumentPosition (b): 1,1 & d ||! c.sortDetached && b.compareDocumentPosition (a) === d? a === n || a. Se você está procurando por uma solução para o seu problema, entre em contato com a nossa equipe de suporte para obter mais informações. ): 0: 4 & d? -1: 1)}: function (a, b) {if (a === b) retorna l =! 0,0; var c, d = 0, e = a.parentNode, f = b.parentNode, g = [a], h = [b]; if (! e ||!f) retorna a === n? -1: b === n? 1: e? -1: f? 1: k? I (k, a) -I (k, b): 0; se (e === f) retorna la (a, b); c = a; while (c = c.parentNode) g.unshift (c); c = b; while (c = c.parentNode) h.unshift (c) ; while (g [d] === h [d]) d ++; return d? la (g [d], h [d]): g [d] === v? -1: h [d] = == v? 1: 0}, n): n}, ga.matches = função (a, b) {retorna ga (a, nulo, nulo, b)}, ga.matchesSelector = function (a, b) { if ((a.ownerDocument || a)! == n && m (a), b = b.replace (S, "= '$ 1']"), c.matchesSelector && p &&! A [b + ""] && (! r | |! r.test (b)) && (! q ||! q.test (b))) tente {var d = s.call (a, b); if (d || c.disconnectedMatch || a. documento && 11! == a.document.nodeType) return d} catch (e) {} return ga (b, n, null, [a]). length> 0}, ga.contains = function (a, b) {return (a.ownerDocument || a)! == n && m (a), t (a, b)}, ga.attr = função (a, b) {(a.ownerDocument || a)! == n && m (a) ; var e = d.attrHandle [b.toLowerCase ()], f = e && C.call (d.attrHandle, b.toLowerCase ())? e (a, b,! p): void 0; return void 0! == f? f: c.attributes ||! p? a.getAttribute (b) :( f = a.getAttributeNode (b)) && f.specified? f.value: null}, ga.escape = function (a) {return (a + ""). replace (ba, ca)}, ga.error = function (a) {throw new Error ("Erro de sintaxe, expressão não reconhecida:" + a)}, ga.uniqueSort = função (a) {var b, d = []] e = 0, f = 0; if (l =! c. detectDuplicates, k =! c.sortStable && a.slice (0), a.sort (B), l) {while (b = a [f ++]) b === a [f] && (e = d.push (f )); while (e -) a.splice (d [e], 1)} retorna k = nulo, a}, e = ga.getText = function (a) {var b, c = "", d = 0, f = a.nodeType; if (f) {if (1 === f || 9 === f || 11 === f) {if ("string" == tipo de a.textContent) retorna um .textContent; para (a = a.PrimeiraChild; a; a = a.nextSibling) c + = e (a)} else if (3 === f || 4 === f) retorna a.nodeValue} else while ( b = a [d ++]) c + = e (b); retorna c}, d = ga.selectors = {cacheLength: 50, createPseudo: ia, corresponde:V, attrHandle: {}, encontre: {}, relativo: {">": {dir: "parentNode", primeiro:! 0}, "": {dir: "parentNode"}, "+": {dir: "previousSibling", primeiro:! 0}, "~": {dir: "previousSibling"}}, preFilter: {ATTR: função (a) {retorna a [1] = a [1] .replace (_, aa) , a [3] = (a [3] || a [4] || a [5] || ""). substitua (_, aa), "~ =" === a [2] && (a [3] = "" + a [3] + ""), a.slice (0,4)}, CRIANÇA: function (a) {retorna a [1] = a [1] .toLowerCase (), "enésimo "=== a [1]. fatia (0,3)? (a [3] || ga.error (a [0]), a [4] = + (a [4]? a [5] + (a [6] || 1): 2 * ("par" === a [3] || "ímpar" === a [3])), a [5] = + (a [7] + a [8] || "ímpar" === a [3])): a [3] && ga.error (a [0]), a}, PSEUDO: função (a) {var b, c =! a [6] && a [2]; retorne V.CHILD.test (a [0])? Null: (a [3]? A [2] = a [4] || a [5] || "": c &&T .test (c) && (b = g (c,! 0)) &&(b = c.indexOf (")", c.length-b) -c.length) && (a [0] = a [0] .slice (0, b), a [2] = c.slice ( 0, b)), a.slice (0,3))}}, filtro: {TAG: function (a) {var b = a.replace (_, aa) .toLowerCase (); return "*" == = a? function () {return! 0}: function (a) {return a.nodeName && a.nodeName.toLowerCase () === b}}, CLASS: function (a) {var b = y [a + ""] ; return b || (b = new RegExp ("(^ |" + K + ")" + a + "(" + K + "| $)")) && y (a, função (a) {return b.test (" string "== tipo de a.className && a.className ||" undefined "! = tipo de a.getAttribute && a.getAttribute (" classe ") ||" ")})}, ATTR: function (a, b, c) {return function (d) {var e = ga.attr (d, a); return null == e? "! =" === b:! b || (e + = "", "=" === b? e === c: "! =" === b? e! == c: "^ =" === b? c && 0 === e.indexOf (c): "* ="=== b? c && e.indexOf (c)> - 1: "$ =" === b? c && e.slice (-c.length) === c: "~ =" === b? ("" + e.replace (O, "") + "") .indexDe (c)> - 1: "| =" === b && (e === c || e.slice (0, c.length + 1) ) === c + "-"))}}, CRIANÇA: função (a, b, c, d, e) {var f = "enésimo"! == a.slice (0,3), g = "ultimo "! == a.slice (-4), h =" do tipo "=== b; return 1 === d && 0 === e? function (a) {return !! a.parentNode}: function ( b, c, i) {var j, k, l, m, n, o, p = f! == g? "nextSibling": "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase ( ), s =! i &&! h, t =! 1; if (q) {if (f) {while (p) {m = b; while (m = m [p]) if (h? m.nodeName. toLowerCase () === r: 1 === m.nodeType) return! 1; o = p = "only" === a &&! o && "nextSibling"} return! 0} if (o = [g? q. firstChild: q.lastChild], g&&s) {m = q, l = m [u] || (m [u] = {}),k = l [m.uniqueID] || (l [m.uniqueID] = {}), j = k [a] || [], n = j [0] === w && j [1], t = n && j [2], m = n && q.childNodes [n]; while (m = ++ n &&m &&m [p] || (t = n = 0) || o.pop ()) if (1 === m.nodeType && + + t && m === b) {k [a] = [w, n, t]; break}} else if (s && (m = b, l = m [u] || (m [u] = {})) , k = l [m.uniqueID] || (l [m.uniqueID] = {}), j = k [a] || [], n = j [0] === w && j [1], t = n), t === 1) while (m = ++ n && m && m [p] || (t = n = 0) || o.pop ()) if ((h? m.nodeName.toLowerCase () = == r: 1 === m.nodeType) && ++ t && (s && (l = m [u] || (m [u] = {}), k = l [m.uniqueID] || (l [ m.uniqueID] = {}), k [a] = [w, t]), m === b)) break; return t- = e, t === d || t% d === 0 && t / d> = 0}}}, PSEUDO: função (a, b) {var c, e = d.pseudos [a] || d.setFilters [a.toLowerCase ()] || ga.error ("pseudo não suportado : "+ a); return e [u]? e (b): e.length> 1? (c = [a, a," ", b], d.setFilters.hasOwnProperty (a.toLowerCase ())? ia (function (a, c) {var d, f = e (a, b), g = comprimento f; enquanto (g -) d = I (a, f [g]), a [d] =! (c [d] = f [g])}): function (a) {return e (a, 0, c)}): e}}, pseudos: {not: ia (function ( a) {var b = [], c = [], d = h (a.replace (P, "$ 1")); return d [u]? ia (função (a, b, c, e) {var f, g = d (a, nulo, e, []), h = a.length; while (h -) (f = g [h]) && (a [h] =! (b [h] = f))}): function (a, e, f) {retorna b [0] = a, d (b, nulo, f, c), b [0] = nulo,! c.pop ()}}) , possui: ia (função (a) {retorna função (b) {retorna ga (a, b). comprimento> 0}}), contém: ia (função (a) {retorna a = a.replace (_, aa ), function (b) {return (b.textContent || b.innerText || e (b)). indexOf (a)> - 1}}), lang: ia (function (a) {return U.test ( a || "") || ga.error ("lang não suportado:" + a), a = a.replace (_, aa) .toLowerCase (), função (b) {var c; faça se (c = p b.lang: b.getAttribute ("xml: lang") || b.getAttribute ("lang")) return c = c.toLowerCase (), c === a || 0 === c.indexOf (a + "-"); while ((b = b.parentNode) && 1 === b.nodeType); return! 1}}), target: function (b) {var c = a.location && a.location.hash ; return c && c.slice (1) === b.id}, raiz: função (a) {retorna a === o}, foco: função (a) {retorna a === n.activeElement && (! n. hasFocus || n.hasFocus ()) && !! (a.type || a.href || ~ a.tabIndex)}, ativado: oa (! 1), desativado: oa (! 0), marcado: function ( a) {var b = a.nodeName.toLowerCase (); return "input" === b && !! a.checked || "option" === b && !! a.selected}, selecionado: function (a) { return a.parentNode && a.parentNode.selectedIndex, a.selected ===! 0}, vazio: function (a) {for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType <6) return! 1; return! 0}, pai: função (a) {retorno! d.pseudos.empty (a)}, cabeçalho: função (a) {retorno X.test (a.nodeName)}, entrada: function ( a) {retorne W.test (a.nodeName)}, botão:function (a) {var b = a.nodeName.toLowerCase (); return "input" === b && "button" === a.type || "button" === b}, texto: function (a) {var b; return "input" === a.nodeName.toLowerCase () && "text" === a.type && (null == (b = a.getAttribute ("type")) || "text" = == b.toLowerCase ())}, primeiro: pa (função () {retornar [0]}), último: pa (função (a, b) {retornar [b-1]}), eq: pa (função (a, b, c) {return [c <0? c + b: c]}), even: pa (função (a, b) {para (var c = 0; c <b; c + = 2) a .push (c); retorna a}), ímpar: pa (função (a, b) {for (var c = 1; c <b; c + = 2) a.push (c); retorna a}), lt : pa (função (a, b, c) {para (var d = c <0? c + b: c; - d> = 0;) a.push (d); retornar a}), gt: pa (função (a, b, c) {para (var d = c <0? c + b: c; ++ d <b;) a.push (d); retorna a})}}, d.pseudos. nth = d.pseudos.eq; for (b em {radio:! 0, caixa de seleção:! 0, arquivo:! 0, senha:! 0, imagem:! 0}) d.pseudos [b] = ma (b) ; para (b em {submit:! 0,reset:! 0}) d.pseudos [b] = na (b); função ra () {} ra.prototype = d.filters = d.pseudos, d.setFilters = new ra, g = ga.tokenize = function (a, b) {var c, e, f, g, h, i, j, k = z [a + ""]; se (k) retornar b? 0: k.slice (0); h = a, i = [], j = d.preFilter; while (h) {c &&! (e = Q.exec (h)) || (e && (h = h.slice (e [0] .length) || h)) , i.push (f = [])), c =! 1, (e = R.exec (h)) && (c = e.shift (), f.push ({valor: c, tipo: e [ 0] .replace (P, "")}), h = h.slice (c.length)); para (g em filtro d)! (E = V [g] .exec (h)) || j [g] &&! (e = j [g] (e)) || (c = e.shift (), f. push ({valor: c, tipo: g, corresponde a: e}), h = h. fatia (c.length)); se (! c) break} retornar b? h.length: h? ga.error (a): z (a, i) .slice (0)}; function sa (a) { for (var b = 0, c = a.length, d = ""; b <c; b ++) d + = a [b] .valor; return d} função ta (a, b, c) {var d = b .dir, e = b.próximo, f = e || d, g = c && "parentNode" === f, h = x ++; retorna a função b.first? (b, c, e) {while (b = b [d]) se (1 === b.nodeType || g) retorna a (b, c, e); retorna! 1}: function (b, c, i) {var j, k, l, m = [w, h]; if (i) {while (b = b [d]) if ((1 === b.nodeType || g) && a (b, c, i)) retornam! 0} else while (b = b [d]) if (1 == = b.nodeType || g) se (l = b [u] || (b [u] = {}), k = l [b.uniqueID] || (l [b.uniqueID] = {}), e && e === b.nodeName.toLowerCase ()) b = b [d] || b; else {if ((j = k [f]) ​​&&j [0] === w && j [1] === h) return m [2] = j [2]; if (k [f] = m, m [2] = a (b, c, i)) return! 0} return! 1}} função ua (a) {return a.length> 1? função (b, c, d) {var e = a.length; while (e -) if (! a [e] (b, c, d)) return! 1; return! 0 }: a [0]} função va (a, b, c) {for (var d = 0, e = b.length; d <e; d ++) ga (a, b [d], c); return c } função wa (a, b, c, d, e) {for (var f, g = [], h = 0, i = a.length, j = nulo! = b; h <i; h ++) (f = a [h]) && (c &&! c (f, d, e) || (g.push (f), j &&b.push (h))); retornar g} função xa (a, b, c, d , e, f) {retorna d &&! d [u] && (d = xa (d)), e &&! e [u] && (e = xa (e, f)),ia (função (f, g, h, i) {var j, k, l, m = [], n = [], o = g.length, p = f || va (b || "*", h.nodeType? [h]: h, []), q =! a ||! f &&b? p: wa (p, m, a, h, i), r = c? e || (f? a: o || d)? []: g: q; se (c && c (q, r, h, i), d) {j = wa (r, n), d (j, [], h, i), k = j.length; while (k -) (l = j [k]) && (r [n [k]] =! (q [n [k]] = l))} if (f) {if (e || a) {se (e) {j = [], k = comprimento r; enquanto (k -) (l = r [k]) && j.push (q [k] = l); e (nulo, r = [], j, i)} k = r.length; while (k -) (l = r [k]) && (j = e? I (f, l): m [k] )> - 1 && (f [j] =! (G [j] = l))}} else r = wa (r === g? R.splice (o, r.length): r), e? (null, g, r, i): G.apply (g, r)})} function ya (a) {for (var b, c, e, f = a.length, g = d.relative [a [ 0] .type], h = g || d.relativo [""], i = g? 1: 0, k = ta (função (a) {retorna a === b}, h,! 0), l = ta (função (a) {retorna I (b, a)> - 1}, h,! 0), m = [função (a, c, d) {var e =! g && (d || c! == j) || ((b = c) .nodeType? k (a, c, d): l (a, c, d)); return b = nulo, e}]; i <f; i ++) se (c = d.relativo [a [i].tipo]) m = [ta (ua (m), c)]; caso contrário, {if (c = d.filter [a [i] .type] .apply (null, a [i] .matches), c [u ]) {for (e = ++ i; e <f; e ++) if (d.relative [a [e] .type]) break; return xa (i> 1 && ua (m), i> 1 && sa (a.slice (0, i-1) .concat ({value: "" === a [i-2] .type? "*": ""})). Replace (P, "$ 1"), c, i < e && ya (a.slice (i, e)), e <f &&a (a = a.slice (e)), e <f && sa (a))} m.push (c)} retorna ua (m)} função za ( a, b) {var c = comprimento b> 0, e = comprimento> 0, f = função (f, g, h, i, k) {var l, o, q, r = 0, s = "0", t = f && [], u = [], v = j, x = f || e && d.find.TAG ("*", k), y = w + = nulo == v? 1: Matemática. random () || .1, z = x.length; para (k && (j = g === n || g || k); s! == z && null! = (l = x [s]); s ++ ) {if (e && l) {o = 0, g || l.ownerDocument === n || (m (l), h =! p); while (q = a [o ++]) if (q (l, g || n, h)) {i.push (l); break} k && (w = y)} c && ((l =! q && l) &&r -, f && t.push (l))} if (r + = s, c && s! == r) {o = 0; while (q = b [o ++]) q (t, u, g, h); se (f) {se (r> 0) enquanto (s -) t [s] || u [s] || (u [s] = chamada E. (i)); u = wa (u)} G .apply (i, u), k &&! f && u.length> 0 && r + b.length> 1 && ga.uniqueSort (i)} return k && (w = y, j = v), t}; return c? ia (f): f} return h = ga.compile = function (a, b) {var c, d = [], e = [], f = A [a + ""]; if (! f) {b || (b = g (a)), c = b.length; while (c -) f = ya (b [c]), f [u]? d.push (f): e.push (f); f = A (a, za (e, d)), f.seletor = a} retornar f}, i = ga.select = função (a, b, c, e) {var f, i, j, k, l, m = "função" == tipo de a && a, n =! e && g (a = m.seletor || a); if (c = c || [], 1 === n.length) {if (i = n [0 ] = n [0]. fatia (0), comprimento i> 2 && "ID" === (j = i [0]). tipo && 9 === b.nodeType && p && d.relative [i [1] .type]) {if (b = (d.find.ID (j.parece [0]. substituir (_, aa), b) || []) [0] ,! b) retornar c; m && (b = b.parentNode), a = a.slice (i.shift (). value.length)} f = V.needsContext.test (a)? 0: i.length; while (f -) {if (j = i [ f], d.relativa [k = j.type]) quebra; if ((l = d.find [k]) && (e = l (j.parece [0]. substitua (_, aa), $. teste (i [0] .type) && qa (b.parentNode) || b))) {if (i.splice (f, 1), a = comprimento e && sa (i) ,! a) retorne G.apply ( c, e), c; break}}} return (m || h (a, n)) (e, b,! p, c,! b || $ .test (a) && qa (b.parentNode) | | b), c}, c.sortStable = u.split (""). sort (B) .join ("") === u, c.detectDuplicates = !! l, m (), c.sortDetached = ja (function (a) {return 1 & a.compareDocumentPosition (n.createElement ("fieldset"))}), ja (function (a) {return a.innerHTML = "<a href='#'> </a>" , "#" === a.firstChild.getAttribute ("href")}) || ka ("tipo | href | height | width", função (a, b, c) {if (! c) retorna a. getAttribute (b, "tipo" === b.toLowerCase ()? 1:2)}), c.attributes && ja (function (a) {return a.innerHTML = "<input />", a.firstChild.setAttribute ("value", ""), "" === a.firstChild.getAttribute ("valor")}) || ka ("valor", função (a, b, c) {if (! c && "input" === a.nodeName.toLowerCase ()) retorna a.defaultValue}), ja (função (a) {return null == a.getAttribute ("disabled")}) || ka (J, função (a, b, c) {var d; if (! c) retorna a [b] == =! 0? B.toLowerCase () :( d = a.getAttributeNode (b)) && d.especificado? D.value: null}), ga} (a); r.find = x, r.expr = x. seletores, r.expr [":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x .contains, r.escapeSelector = x.escape; var y = função (a, b, c) {var d = [], e = nulo 0! == c; while ((a = a [b]) && 9! == a.nodeType) if (1 === a.nodeType) {if (e && r (a) .is (c)) quebra; d.push (a)} return d}, z = function (a, b) {for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a! == b && c.push (a) ; return c}, A = r.expr.match.needsContext; função B (a, b) {retorna a.nodeName && a.nodeName.toLowerCase () === b.toLowerCase ()} var C = / ^ <([ az] [^ \ / \ 0>: \ x20 \ t \ r \ n \ f] *) [\ x20 \ t \ r \ n \ f] * \ /?> (?: <\ / \ 1> | ) $ / i, D = / ^. [^: # \ [\.,] * $ /; função E (a, b, c) {return r.isFunction (b)? r.grep (a, function ( a, d) {return !! b.call (a, d, a)! == c}): b.nodeType? r.grep (a, função (a) {retorna a === b! == c }): "string"! = tipo de b? r.grep (a, função (a) {retorne chamada.c (b, a)> - 1! == c}): D.test (b)? r. filter (b, a, c) :( b = filtro de filtro (b, a), r.grep (a, função (a) {return i.call (b, a)> - 1! == c && 1 == = a.nodeType}))} r.filter = function (a, b, c) {var d = b [0]; retorna c && (a = ": not (" + a + ")"), 1 === b.length && 1 === d.nodeType? r.find.matchesSelector (d, a)? [d]: []: r.find.corresponde (a, r.grep (b, função (a) {return 1 === a.nodeType}))}, r.fn.extend ({find: function (a) {var b, c, d = this .length, e = this; if ("string"! = typeof) retorna this.pushStack (r (a) .filter (function () {for (b = 0; b <d; b ++) if (r.contains (e [b], isso)) return! 0})); for (c = this.pushStack ([]), b = 0; b <d; b ++) r.find (a, e [b], c ); return d> 1? r.uniqueSort (c): c}, filter: function (a) {retorna this.pushStack (E (isto, a || [] ,! 1))}, não: function (a ) {return this.pushStack (E (isso, a || [] ,! 0))}, é: function (a) {return !! E (this, "string" == typeof a && A.test (a)? r (a): a || [] ,! 1) .length}}); var F, G = / ^ (?: \ s * (<[\ w \ W] +>) [^>] * | # ([\ w -] +)) $ /, H = r.fn.init = função (a, b, c) {var e, f; if (! a) retorna isso; if (c = c || F, "string" == tipo de a) {if (e = "<" === a [0] && ">" === a [a.length-1] && a.length> = 3? [Null, a, null]: G.exec (a) ,! e ||! e [1] && b) return! b || b.jquery? (b || c) .find (a): este.construtor (b) .find (a); if (e [1]) {if (b = b instância de r? b [0]: b, r .merge (this, r.parseHTML (e [1], b && b.nodeType? b.ownerDocument || b: d,! 0)), C.test (e [1]) && r.isPlainObject (b)) for ( e em b) r.isFunction (this [e])? this [e] (b [e]): this.attr (e, b [e]); return this} return f = d.getElementById (e [2 ]), f && (this [0] = f, this.length = 1), this} retorna a.nodeType? (this [0] = a, this.length = 1, this): r.isFunction (a)? void 0! == c.ready? c.ready (a): a (r): r.makeArray (a, this)}; H.prototype = r.fn, F = r (d); var I = / ^ (?: pais | prev (?: Até | todos)) /, J = {filhos:! 0, conteúdo:! 0, próximo:! 0, prev:! 0}; r.fn.extend ({has: função (a) {var b = r (a, this), c = b.length; retorna this.filter (function () {for (var a = 0; a <c; a ++) if (r.contains (this , b [a])) return! 0})}, mais próximo: function (a, b) {var c, d = 0, e = this.length, f = [], g = "string"! = typeof a && r (a); if (! A.test (a)) para (; d <e;d ++) for (c = this [d]; c && c! == b; c = c.parentNode) if (c.nodeType <11 && (g? g.index (c)> - 1: 1 === c.nodeType && r .find.matchesSelector (c, a))) {f.push (c); break} retorna this.pushStack (f.length> 1? r.uniqueSort (f): f)}, índice: function (a) { retornar uma? "string" == tipo de a? i.call (r (a), este [0]): i.call (this, a.jquery? a [0]: a): this [0] && this [ 0] .parentNode? This.first (). PrevAll (). Length: -1}, add: function (a, b) {retorna this.pushStack (r.uniqueSort (r.merge (this.get (), r (a, b))))}, addBack: function (a) {return this.add (null == a? this.prevObject: this.prevObject.filter (a))}}); function K (a, b ) {while ((a = a [b]) && 1! == a.nodeType); return a} r.each ({parent: function (a) {var b = a.parentNode; return b && 11! == b. nodeType? b: null}, parent: function (a) {return y (a, "parentNode")}, parentsUntil: function (a, b, c) {return y (a, "parentNode", c)}, next :function (a) {return K (a, "nextSibling")}, prev: function (a) {return K (a, "previousSibling")}, nextAll: function (a) {return y (a, "nextSibling") }, prevAll: function (a) {return y (a, "previousSibling")}, nextUntil: function (a, b, c) {return y (a, "nextSibling", c)}, prevUntil: function (a, b, c) {return y (a, "previousSibling", c)}, irmãos: function (a) {return z ((a.parentNode || {}). firstChild, a)}, children: function (a) {return z (a.firstChild)}, conteúdo: function (a) {return B (a, "iframe")? a.contentDocument: (B (a, "template") && (a = a.content || a ), r.merge ([], a.childNodes))}}, função (a, b) {r.fn [a] = função (c, d) {var e = r.map (this, b, c ); return "Até"! == uma fatia (-5) && (d = c), d && "string" == tipo de d && (e = r.filter (d, e)), this.length> 1 && ( J [a] || r.uniqueSort (e), I.teste (a) && e.reverse ()), this.pushStack (e)}}); var L = / [^ \ x20 \ t \ r \ n \ f] + / g; função M (a) {var b = {}; return r.each (a.match (L) || [], função (a, c) {b [c] =! 0}), b} r.Callbacks = function (a) {a = "string" = = tipo de a? M (a): r.extend ({}, a); var b, c, d, e, f = [], g = [], h = -1, i = function () {para (e = e || a. uma vez, d = b =! 0; g.length; h = -1) {c = g.shift (); while (++ h <f.length) f [h]. aplique (c [0], c [1]) ===! 1 && a.stopOnFalse && (h = comprimento de comprimento, c =! 1)} a.memória || (c =! 1), b =! 1, e && (f = c? []: "")}, j = {add: function () {return f && (c &&! b && (h = f.length-1, g.push (c)), função d (b) {r.each (b, function (b, c) {r.isFunction (c)? a.unique && j.has (c) || ​​f.push (c): c && c.length && "string"! == r.type (c) && d (c)})} (argumentos), c &&! b && i ()), isto}, remove: function () {retorna r.each (argumentos, função (a, b) {var c; while (( c = r.emArray (b, f, c))> - 1) f.splice (c, 1), c <= h && h -}), isto}, possui: function (a) {return a? r.inArray (a, f)> - 1: f.length> 0}, vazio: function () {return f && (f = []), this}, desativar: function () {return e = g = [], f = c = "", this}, desativado: function () {return! f} , lock: function () {return e = g = [], c || b || (f = c = ""), this}, locked: function () {return !! e}, fireWith: function (a , c) {return e || (c = c || [], c = [a, c.slice? c.slice (): c], g.push (c), b || i ()), this}, fire: function () {return j.fireCom (this, argumentos), this}, acionado: function () {return !! d}}; return j}; function N (a) {return a} function O (a) {lança a} função P (a, b, c, d) {var e; tenta {a && r.isFunction (e = a.promise)? e.call (a) .done (b) .fail (c ): a && r.isFunction (e = a.then)? e.call (a, b, c): b.apply (void 0, [a] .slice (d))} catch (a) {c.apply ( void 0, [a])}} r.extend ({adiado: função (b) {var c = [["notificar", "progresso", r.Callbacks ("memória "), r.Callbacks (" memória "), 2], [" resolver "," pronto ", r.Callbacks (" uma vez memória "), r.Callbacks (" uma vez memória "), 0," resolvido " ], ["rejeitar", "falhar", r.Callbacks ("uma vez memória"), r.Callbacks ("uma vez memória"), 1, "rejeitado"]], d = "pendente", e = {state: function () {return d}, sempre: function () {return f.done (argumentos) .fail (argumentos), isso}, "catch": function (a) {return e.then (null, a)}, pipe: função () {var a = argumentos; retornar r.Deferido (função (b) {r.each (c, função (c, d) {var e = r.isFunção (a [d [4]]) && a [d [4]]; f [d [1]] (function () {var a = e && e.apply (isto, argumentos); a && r.isFunction (a.promise)? a.promise (). progress (b. notificar). concluído (b.resolve) .fail (b.reject): b [d [0] + "With"] (isto, e? [a]: argumentos)})}), a = nulo}). promessa ()}, então:função (b, d, e) {var f = 0; função g (b, c, d, e) {função de retorno () {var h = isto, i = argumentos, j = função () {var a, j ; if (! (b <f)) {if (a = d.apply (h, i), a === c.promise ()) lança novo TypeError ("Auto-resolução escalável"); j = a && ( "object" == tipo de a || "função" == tipo de a) && a.aí então, r.isFunção (j)? e? j.call (a, g (f, c, N, e), g (f , c, O, e)) :( f ++, j.all (a, g (f, c, N, e), g (f, c, O, e), g (f, c, N, c. notifyWith))) :( d! == N && (h = void 0, i = [a]), (e || c.resolveWith) (h, i))}}, k = e? j: function () {try {j ()} catch (a) {r.Deferred.exceptionHook && r.Deferred.exceptionHook (a, k.stackTrace), b + 1> = f && (d! == O && (h = void 0, i = [ a]), c.rejectWith (h, i))}}; b? k () :( r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook ()), a.setTimeout (k))} } retorna r.Deferido (função (a) {c [0] [3] .adiciona (g (0, a, função r.is (e)? e: N, a.notifyWith)), c [1] [3 ] .add (g (0, a, r.isFunction (b)? b: N)), c [2] [3] .add (g (0, a, r.isFunction (d)? d: O))}). promessa ()}, promessa: função (a) {return null! = a? r.extend (a, e): e}}, f = {}; return r.each (c, função (a, b) {var g = b [2], h = b [5]; e [b [1]] = g.add, h && g.add (função () {d = h}, c [3-a] [2] .disable, c [0] [2 ] .lock), g.add (b [3] .fire), f [b [0]] = função () {return f [b [0] + "With"] (this === f? void 0 : this, argumentos), this}, f [b [0] + "With"] = g.fireWith}), e.promise (f), b && b.call (f, f), f}, quando: function ( a) {var b = argument.length, c = b, d = matriz (c), e = f.call (argumentos), g = r.Deferido (), h = função (a) {função de retorno (c) {d [a] = this, e [a] = argument.length> 1? f.call (argumentos): c, - b || g.resolveWith (d, e)}}; if (b <= 1 && (P (a, g.done (h (c)). Resolve, g.reject,! B), "pendente" === g.state () || r.isFunction (e [c] && e [c] .then))) return g.then (); while (c -) P (e [c], h (c), g.reject); return g.promise ()}});var Q = / ^ (Eval | Interno | Intervalo | Referência | Sintaxe | Tipo | URI) Erro $ /; r.Deferred.exceptionHook = função (b, c) {a.console && a.console.warn && b && Q.test (b.name ) && a.console.warn ("jQuery.Deferred exception:" + b.message, b.stack, c)}, r.readyException = function (b) {a.setTimeout (function () {throw b})}; var R = r.Deferido (); r.fn.ready = function (a) {return R.then (a) ["catch"] (function (a) {r.readyException (a)}), this}, r.extend ({isReady:! 1, readyWait: 1, ready: function (a) {(a ===! 0? - r.readyWait: r.isReady) || (r.isReady =! 0, a ! ==! 0 && - r.readyWait> 0 || R.resolveWith (d, [r]))}}), r.ready.then = R.then; função S () {d.removeEventListener ("DOMContentLoaded ", S)console.warn ("jQuery.Deferred exceção:" + b.message, b.stack, c)}, r.readyException = function (b) {a.setTimeout (function () {throw b})}; var R = r.Deferred (); r.fn.ready = function (a) {return R.then (a) ["catch"] (function (a) {r.readyException (a)}), this}, r.extend ({isReady:! 1, readyWait: 1, ready: function (a) {(a ===! 0? - r.readyWait: r.isReady) || (r.isReady =! 0, a! == ! 0 && - r.readyWait> 0 || R.resolveWith (d, [r]))}}), r.ready.then = R.then; função S () {d.removeEventListener ("DOMContentLoaded", S ),console.warn ("jQuery.Deferred exceção:" + b.message, b.stack, c)}, r.readyException = function (b) {a.setTimeout (function () {throw b})}; var R = r.Deferred (); r.fn.ready = function (a) {return R.then (a) ["catch"] (function (a) {r.readyException (a)}), this}, r.extend ({isReady:! 1, readyWait: 1, ready: function (a) {(a ===! 0? - r.readyWait: r.isReady) || (r.isReady =! 0, a! == ! 0 && - r.readyWait> 0 || R.resolveWith (d, [r]))}}), r.ready.then = R.then; função S () {d.removeEventListener ("DOMContentLoaded", S ),==! 0 && - r.readyWait> 0 || R.resolveWith (d, [r]))}}), r.ready.then = R.then; função S () {d.removeEventListener ("DOMContentLoaded" , S),==! 0 && - r.readyWait> 0 || R.resolveWith (d, [r]))}}), r.ready.then = R.then; função S () {d.removeEventListener ("DOMContentLoaded" , S),
a.removeEventListener ("load", S), r.ready ()} "complete" === d.readyState || "loading"! == d.readyState &&! d.documentElement.doScroll? a.setTimeout (r. pronto) :( d.addEventListener ("DOMContentLoaded", S), a.addEventListener ("carga", S)); var T = função (a, b, c, d, e, f, g) {var h = 0, i = a.length, j = nulo == c; if ("objeto" === tipo.r (c)) {e =! 0; para (h em c) T (a, b, h, c [h] ,! 0, f, g)} else if (void 0! == d && (e =! 0, r.isFunção (d) || (g =! 0), j && (g? (b. chamada (a, d), b = nula) :( j = b, b = função (a, b, c) {retorna j.call (r (a), c)})), b)) para (; h <i; h ++) b (a [h], c, g? d: d.call (a [h], h, b (a [h], c))); return e? a: j? b .call (a): i? b (a [0], c): f}, U = função (a) {return 1 === a.nodeType || 9 === a.nodeType ||! + a .nodeType}; function V () {this.expando = r.expando + V.uid ++} V.uid = 1, V.prototype = {cache: function (a) {var b = a [this.expando]; return b || (b = {}, U (a) e& (a.nodeType? a [this.expando] = b: Object.defineProperty (a, this.expando, {valor: b, configurável:! 0}))), b}, set: function (a, b, c) {var d, e = this.cache (a); if ("string" == tipo de b) e [r.camelCase (b)] = c; caso contrário, para (d em b) e [r.camelCase (d)] = b [d]; return e}, get: function (a, b) {return void 0 === b? this.cache (a): a [this.expando] && a [this.expando] [r.camelCase ( b)]}, access: function (a, b, c) {return void 0 === b || b && "string" == tipo de b && void 0 === c? this.get (a, b) :( this .set (a, b, c), void 0! == c? c: b)}, remove: function (a, b) {var c, d = a [this.expando]; if (void 0! = = d) {if (void 0! == b) {Array.isArray (b)? b = b.map (r.camelCase) :( b = r.camelCase (b), b = b em d? [b ]: b.match (L) || []), c = b.length; while (c -) exclui d [b [c]]} (vazio 0 === b || r.isEmptyObject (d) ) && (a.nodeType? a [this.expando] = void 0: exclua a [this.expando])}}, hasData: function (a) {var b = a [this.expando]; retorne void 0! = = b &&! r.isEmptyObject (b)}}; var W = novo V, X = novo V, Y = / ^ (?: \ {[\ w \ W] * \} | \ [[\ w \ W] * \]) $ /, Z = / [AZ] / g; função $ (a) {return "true" === a || "false"! == a && ("null" === a? Null: a === + a + ""? + a: Y.test (a)? JSON.parse (a): a)} função _ (a, b, c) {var d; if (void 0 === c && 1 = == a.nodeType) if (d = "data -" + b.replace (Z, "- $ &"). toLowerCase (), c = a.getAttribute (d), "string" == typeof c) { tente {c = $ (c)} catch (e) {} X.set (a, b, c)} else c = void 0; retorne c} r.extend ({hasData: function (a) {return X. hasData (a) || W.hasData (a)}, data: function (a, b, c) {retorna X.access (a, b, c)}, removeData: function (a, b) {X.remove (a, b)}, _ data: function (a, b, c) {retornar W.access (a, b, c)}, _ removeData: function (a, b) {W.remove (a, b)}} ), r.fn.extend ({data: function (a, b) {var c, d, e, f = this [0], g = f && f.atributes; if (void 0 === a) {if ( this.length && (e = X.get (f), 1 === f.nodeType &&! W.get (f, "hasDataAttrs"))) {c = g.length; while (c -) g [c] && (d = g [c] .name, 0 === d.indexOf ( "data -") && (d = r.camelCase (d.slice (5)), _ (f, d, e [d]))); W.set (f, "hasDataAttrs",! 0)} return e} retornar "objeto" == tipo de a? this.each (function () {X.set (this, a)}): T (esta, função (b) {var c; if (f && void 0 === b ) {if (c = X.get (f, a), void 0! == c) return c; if (c = _ (f, a), void 0! == c) return c} mais this.each (function () {X.set (this, a, b)})}, null, b, argument.length> 1, null,! 0)}, removeData: function (a) {retorna this.each (function ( ) {X.remove (this, a)})}}), r.extend ({fila: function (a, b, c) {var d; se (a) retornar b = (b || "fx") + "fila", d = W.get (a, b), c && (! d || Array.isArray (c)? d = W.access (a, b, r.makeArray (c)): d.push (c)), d || []}, desenfileire: função (a, b) {b = b || "fx"; var c = r.queue (a, b), d = c. comprimento, e = c.shift (), f = r._queueHooks (a, b), g = function () {r.dequeue (a, b)}; "inprogress" === e && (e = c.shift (), d -), e && ("fx" = == b && c.unshift ("inprogress"), exclua f.stop, e.call (a, g, f)) ,! d && f && f.empty.fire ()}, _ queueHooks: function (a, b) {var c = b + "queueHooks"; retornar W.get (a, c) || ​​W.access (a, c, {vazio: r.Callbacks ("uma vez memória").) add (function () {W.remove (a, [ b + "fila", c])})})}}), r.fn.extend ({fila: função (a, b) {var c = 2; retornar "string"! = tipo de a && (b = a, a = "fx", c -), argument.length <c? r.queue (this [0], a): void 0 === b? this: this.each (function () {var c = r .queue (this, a, b); r._queueHooks (this, a), "fx" === a && "inprogress"! == c [0] && r.dequeue (this, a)})}, desenfileire: função (a) {retorna this.each (function () {r.dequeue (this, a)})}, clearQueue:função (a) {return this.queue (a || "fx", [])}, promessa: função (a, b) {var c, d = 1, e = r.Deferido (), f = this, g = this.length, h = function () {- d || e.resolveWith (f, [f])}; "string"! = tipo de a && (b = a, a = nulo 0), a = a || "fx"; while (g -) c = W.get (f [g], a + "queueHooks"), c && c.empty && (d ++, c.empty.add (h)); return h (), e.promise (b)}}); var aa = / [+ -]? (?: \ d * \. |) \ d + (?: [eE] [+ -]? \ d + |) /. source, ba = new RegExp ("^ (?: ([+ -]) = |) (" + aa + ") ([az%] *) $", "i"), ca = ["Superior", "Direita" , "Inferior", "Esquerda"], da = função (a, b) {retornar a = b || a, "nenhuma" === a.style.display || "" === a.style.display && r .contains (a.ownerDocument, a) && "none" === r.css (a, "display")}, ea = function (a, b, c, d) {var e, f, g = {} ; para (f em b) g [f] = a.style [f], a.style [f] = b [f]; e = c.apply (a, d || []);for (f in b) a.style [f] = g [f]; retorna e}; função fa (a, b, c, d) {var e, f = 1, g = 20, h = d? função () {return d.cur ()}: function () {return r.css (a, b, "")}, i = h (), j = c && c [3] || (r.cssNumber [b] ? "": "px"), k = (r.cssNúmero [b] || "px"! == j && + i) && ba.exec (r.css (a, b)); if (k && k [3] ! == j) {j = j || k [3], c = c || [], k = + i || 1; faça f = f || ".5", k / = f, r. estilo (a, b, k + j); while (f! == (f = h () / i) && 1! == f && - g)} retornar c && (k = + k || + i || 0 , e = c [1]? k + (c [1] +1) * c [2]: + c [2], d && (d.unidade = j, d.start = k, d.end = e)) , e} var ga = {}; função ha (a) {var b, c = a.ownerDocument, d = a.nodeName, e = ga [d]; return e? e: (b = c.body.appendChild (c.createElement (d)), e = r.css (b, "exibição"), b.parentNode.removeChild (b), "nenhum" === e && (e = "bloco"), ga [d] = e, e)} função ia (a, b) {para (var c, d, e = [], f = 0, g = a.length; f <g; f ++) d = a [f], d .estilo && (c = d.style.display, b? ("nenhum" === c && (e [f] = W.get (d, "exibição") || nulo, e [f] || (d.style .display = "")), "" === d.style.display && da (d) && (e [f] = ha (d))): "nenhum"! == c && (e [f] = "none ", W.set (d," exibição ", c))); para (f = 0; f <g; f ++) null! = E [f] && (a [f] .style.display = e [f ]); return a} r.fn.extend ({show: function () {return ia (this,! 0)}, hide: function () {return ia (this)}, alterna: function (a) {return "booleano" == tipo de a? a? this.show (): this.hide (): this.each (function () {da (this)? r (this) .show (): r (this) .hide ()})}}); var ja = / ^ (?: caixa de seleção | radio) $ / i, ka = / <([az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] +) / i, la = / ^ $ | \ / (?: java | ecma) script / i, ma = {opção: [1, "<selecione múltiplo = 'múltiplo'>", "</select>"] , thead: [1, "<table>", "</table>"], col: [2," <table> <colgroup> "," </colgroup> </table> "], tr: [2," <table> <tbody> "," </tbody> </ tabela> "], td: [3," <table> <tbody> <tr> "," </tr> </tbody> </table> "], _ padrão: [0," "," "]} ; ma.optgroup = ma.option, ma.tbody = ma.tfoot = ma.colgroup = ma.caption = ma.thead, ma.th = ma.td; função na (a, b) {var c; return c = "indefinido"! = tipo de a.getElementsByTagName? a.getElementsByTagName (b || "*"): "indefinido"! = tipo de a.querySelectorAll? a.querySelectorAll (b || "*"): [], sem valor 0 === b || b && B (a, b)? r.merge ([a], c): c} função oa (a, b) {para (var c = 0, d = a.length; c <d ; c ++) W.set (a [c], "globalEval",! b || W.get (b [c], "globalEval"))} var pa = / <| & #? \ w +; /; function qa (a, b, c, d,e) {para (var f, g, h, i, j, k, l = b.createDocumentFragment (), m = [], n = 0, o = a.length; n <o; n ++) se (f = a [n], f || 0 === f) if ("objeto" === tipo.r (f)) r.merge (m, f.nodeType? [f]: f); caso contrário, se ( pa.test (f)) {g = g || l.appendChild (b.createElement ("div")), h = (ka.exec (f) || ["", ""]) [1]. toLowerCase (), i = ma [h] || ma._default, g.innerHTML = i [1] + r.htmlPrefilter (f) + i [2], k = i [0]; while (k--) g = g.lastChild; r.merge (m, g.childNodes), g = l.firstChild, g.textContent = ""} mais m.push (b.createTextNode (f)); l.textContent = "", n = 0; while (f = m [n ++]) if (d && r.inArray (f, d)> - 1) e && e.push (f); caso contrário, se (j = r.contains (f.ownerDocument, f), g = na (l.appendChild (f), "script"), j && oa (g), c) {k = 0; enquanto (f = g [k ++]) la.test (f.type || "") && c .push (f)} retorna l}! function () {var a = d.createDocumentFragment (), b = a.appendChild (d.createElement ("div ")), c = d.createElement (" entrada "); c.setAttribute (" tipo "," rádio "), c.setAttribute (" marcado "," marcado "), c.setAttribute (" nome ", "t"), b.appendChild (c), o.checkClone = b.cloneNode (! 0) .cloneNode (! 0) .lastChild.checked, b.innerHTML = "<textarea> x </textarea>", o .noCloneChecked = !! b.cloneNode (! 0) .lastChild.defaultValue} (); var ra = d.documentElement, sa = / ^ chave /, ta = / ^ (?: mouse | ponteiro | contextomenu | arrastar | soltar ) | clique em /, ua = / ^ ([^.] *) (?: \. (. +) |) /; função va () {return! 0} função wa () {return! 1} função xa ( ) {tente {retornar d.activeElement} função catch (a) {}} ya (a, b, c, d, e, f) {var g, h; if ("object" == typeof b) {"string "! = tipo de c && (d = d || c, c = nulo 0); para (h em b) ya (a, h, c, d, b [h], f); retornar a} if (null = = d && null == e? (e = c, d = c = vazio 0): null == e && ("string"== typeof c? (e = d, d = nulo 0) :( e = d, d = c, c = nulo 0)), e ===! 1) e = wa; caso contrário, se (! e) retornar a; return 1 === f && (g = e, e = function (a) {return r (). off (a), g.apply (isto, argumentos)}, e.guid = g.guid || ( g.guid = r.guid ++)), a.each (function () {r.event.add (this, b, e, d, c)})} r.event = {global: {}, adicione: function (a, b, c, d, e) {var f, g, h, i, j, k, l, m, n, o, p, q = W.get (a); se (q) {c .handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector (ra, e), c.guid || (c.guid = r.guid ++), (i = q .events) || (i = q.eventos = {}), (g = q.handle) || (g = q.handle = function (b) {retorna "indefinido"! = tipo de r && r.event.triggered! == b.type? r.event.dispatch.apply (a, argumentos): void 0}), b = (b || ""). match (L) || [""], j = comprimento b. ; while (j -) h = ua.exec (b [j]) || [], n = p = h [1], o = (h [2] || ""). split ("." ) .sort (), n && (l = r.event.special [n] || {}, n = (e? l.delegateType: l.bindType) || n, l = r.event.especial [n] || {}, k = r.extend ({tipo: n, origType: p, dados: d, manipulador: c, guia: c.guid, seletor: e, needsContext: e && r.expr.match. needsContext.test (e), namespace: o.join (".")}, f), (m = i [n]) || (m = i [n] = [], m.delegateCount = 0, l .setup && l.setup.call (a, d, o, g)! ==! 1 || a.addEventListener && a.addEventListener (n, g)), l.add && (l.add.call (a, k), k .handler.guid || (k.handler.guid = c.guid)), e? m.splice (m.delegateCount ++, 0, k): m.push (k), r.event.global [n] = ! 0)}}, remove: function (a, b, c, d, e) {var f, g, h, i, j, k, l, m, n, o, p, q = W.hasData ( a) &&getget (a); if (q && (i = q.eventos)) {b = (b || ""). corresponde (L) || [""], j = b.length; while ( j -) se (h = ua.exec (b [j]) || [], n = p = h [1], o = (h [2] || ""). split (".") .sort (), n) {l = r.event.special [n] || {}, n = (d? l.delegateType: l.bindType) || n, m = i [n] || [] , h = h [2] && new RegExp ("(^ | \\.)" + o.join ("\\. (?:. * \\. |) ") +" (\\. | $) "), g = f = m.length; enquanto (f -) k = m [f] ,! e && p! == k.origType || c && c.guid! == k.guid || h &&! h.test (k.namespace) || d && d! == k.selector && ("**"! == d ||! k.selector) || (m.splice (f, 1), k.selector && m.delegateCount -, l.remove && l.remove.call (a, k)); g &&! m.length && (l.teardown && l.teardown.call (a, o, q.handle)! ==! 1 || r.removeEvent (a, n, q.handle), exclua i [n])} mais para (n em i) r.event.remove (a, n + b [ j], c, d,! 0); r.isEmptyObject (i) && W.remove (a, "manipula eventos")}}, dispatch: function (a) {var b = r.event.fix (a), c, d, e, f, g, h, i = nova matriz (argumentos. comprimento), j = (W.get (isto, "eventos") || {}) [b.type] || [], k = r.event.special [b.type] || {}; para (i [0] = b, c = 1; c <argumentos. comprimento; c ++) i [c] = argumentos [c]; if ( b.delegateTarget = isso,! k.preDispatch || k.preDispatch.call (isso, b)! ==!1) {h = r.event.handlers.call (this, b, j), c = 0; while ((f = h [c ++]) &&! B.isPropagationStopped ()) {b.currentTarget = f.elem , d = 0; while ((g = f.handlers [d ++]) &&! b.isImmediatePropagationStopped ()) b.rnamespace &&! b.rnamespace.test (g.namespace) || (b.handleObj = g, b. data = g.data, e = ((r.event.special [g.origType] || {}). handle || g.handler) .apply (f.elem, i), void 0! == e && ( b.result = e) ===! 1 && (b.preventDefault (), b.stopPropagation ()))} retornar k.postDispatch && k.postDispatch.call (this, b), b.result}}, manipuladores: function ( a, b) {var c, d, e, f, g, h = [], i = b.delegateCount, j = a.target; if (i && j.nodeType &&! ("clique" === a.type && a. botão> = 1)) para (; j! == isto; j = j.parentNode || isto) se (1 === j.nodeType && ("clique"! == a.type || j.disabled! = =! 0)) {para (f = [], g = {}, c = 0; c <i; c ++) d = b [c], e = d.selector + "", nulo 0 === g [ e] &&(g [e] = d.needsContext? r (e, isto). índice (j)> - 1: r.find (e, isto, nulo, [j]). comprimento), g [e] && f.push (d); f.length && h.push ({elem: j, manipuladores: f})} retornar j = isso, i <b.length && h.push ({elem: j, manipuladores: b.slice (i)}), h}, addProp: function (a, b) {Object.defineProperty (r.Event.prototype, a, {enumerable:! 0, configurable:! 0, get: r.isFunction (b)? function () {if ( this.originalEvent) return b (this.originalEvent)}: function () {if (this.originalEvent) retorna this.originalEvent [a]}, set: function (b) {Object.defineProperty (this, a, {enumerable: ! 0, configurável:! 0, gravável:! 0, valor: b})}})}, correção: function (a) {retorna a [r.expando]? A: new r.Event (a)}, especial : {load: {noBubble:! 0}, foco: {trigger: function () {if (this! == xa () && this.focus) retorna this.focus () ,! 1}, delegateType: "focusin"} , blur: {trigger: function () {if (this === xa () && this.blur) retorna this.blur () ,! 1},delegateType: "focusout"}, clique em: {trigger: function () {if ("checkbox" === this.type && this.click && B (this, "input")) retorne this.click () ,! 1}, _ padrão: function (a) {return B (a.target, "a")}}, beforeunload: {postDispatch: function (a) {void 0! == a.result && a.originalEvent && (a.originalEvent.returnValue = a.result) }}}}, r.removeEvent = function (a, b, c) {a.removeEventListener && a.removeEventListener (b, c)}, r.Event = function (a, b) {retorna esta instância do r.Event? (a && a .type? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue ===! 1? va: wa, this.target = a.target && 3 === a.target.nodeType? a.target.parentNode: a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget): this.type = a, b && r.extend (this, b), this.timeStamp = a && a.timeStamp || r.now (), void (this [r.expando] =! 0)): novo r.Event (a, b)}, r.Event .prototype = {construtor: r.Event, isDefaultPrevented: wa, isPropagationStopped: wa, isImmediatePropagationStopped: wa, isSimulated:! 1, preventDefault: function () {var a = this.originalEvent; this.isDefaultPrevented = va, a && this. isSimulated && a.preventDefault ()}, stopPropagation: function () {var a = this.originalEvent; this.isPropagationStopped = va, a && this.isSimulated && a.stopPropagation ()}, stopImmediatePropagation: function () {var a = this; this.isImmediatePropagationStopped = va, a && this.isSimulated && a.stopImmediatePropagation (), this.stopPropagation ()}}, r.each ({altKey:! 0, bolhas:! 0, cancelável:! 0, alterouTouches:! 0, ctrlKey :! 0, detalhe:! 0, eventPhase:! 0, metaKey:! 0, páginaX:! 0, páginaY:! 0, shiftKey:! 0, visualização:! 0, "char ":! 0, charCode:! 0, chave:! 0, keyCode:! 0, botão:! 0, botões:! 0, clientX:! 0, clientY:! 0, offsetX:! 0, offsetY:! 0 , pointerId:! 0, pointerType:! 0, screenX:! 0, screenY:! 0, targetTouches:! 0, toElement:! 0, toca:! 0, que: function (a) {var b = a.button; Retornar null == a.que && sa.test (a.type)? null! = a.charCode? a.charCode: a.keyCode:! a.which && void 0! == b && ta.test (a.type)? 1 & b? 1 : 2 & b? 3: 4 & b? 2: 0: a.que}}, r.event.addProp), r.each ({mouseenter: "mouseover", mouseleave: "mouseout", ponteiro: "ponteiro", ponteiro sai: " ponteiro "}, função (a, b) {r.event.special [a] = {delegateType: b, bindType: b, handle: function (a) {var c, d = this, e = a.relatedTarget, f = a.handleObj; return e && (e === d || r.contains (d, e)) || (a.type = f.origType, c = f.handler.apply (isto, argumentos), a. tipo = b), c}}}), r.fn.extend ({on: function (a, b, c,d) {retorna ya (isto, a, b, c, d)}, one: function (a, b, c, d) {retorna ya (isto, a, b, c, d, 1)}, off: função (a, b, c) {var d, e; if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r (a.delegateTarget) .off (d.namespace? d.origType + "." + d .namespace: d.origType, d.selector, d.handler), this; if ("objeto" == tipo de a) {para (e em a) this.off (e, b, a [e]); return this} return b! ==! 1 && "function"! = typeof b || (c = b, b = void 0), c ===! 1 && (c = wa), this.each (function () {r .event.remove (this, a, c, b)})}}); var za = / <(?! area | br | col | embed | hr | img | input | link | meta | param) (([ az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] *) [^>] *) \ /> / gi, Aa = / <script | <estilo | <link / i, Ba = / verificado \ s * (?: [^ =] | = \ s *. verificado.) / i, Ca = / ^ true \ / (. *) /, Da = / ^ \ s * <! (?: \ [CDATA \ [| -) | (?: \] \] | -)> \ s * $ / g; função Ea (a, b) {retorna B (a, "tabela") && B (11! = = b.nodeType? b: b.firstChild,"tr")? r ("> tbody", a) [0] || a: a} função Fa (a) {retorna a.type = (nulo! == a.getAttribute ("type")) + " /"+a.type,a}função Ga (a) {var b = Ca.exec (a.type); retorno b? a.type = b [1]: a.removeAttribute ("type"), a} função Ha (a, b) {var c, d, e, f, g, h, i, j; if (1 === b.nodeType) {if (W.hasData (a) && (f = W. acesso (a), g = W.set (b, f), j = f.eventos)) {delete g.handle, g.events = {}; para (e em j) para (c = 0, d = j [e] .length; c <d; c ++) r.event.add (b, e, j [e] [c])} X.hasData (a) && (h = X.access (a), i = r.extend ({}, h), X.set (b, i))}} função Ia (a, b) {var c = b.nodeName.toLowerCase (); "input" === c && ja.test (a.type)? b.checked = a.checked: "input"! == c && "textarea"! == c || (b.defaultValue = a.defaultValue)} function Ja (a, b, c, d ) {b = g.apply ([], b); var e, f, h, i, j, k, l = 0, m = comprimento, n = m-1, q = b [0], s = r.isFunção (q); if (s || m> 1 && "string "== tipo de q &&! o.checkClone && Ba.test (q)) retorna a.each (função (e) {var f = a.eq (e); s && (b [0] = q.call (this, e , f.html ())), Ja (f, b, c, d)}); if (m && (e = qa (b, a [0] .ownerDocument,! 1, a, d), f = e .firstChild, 1 === e.childNodes.length && (e = f), f || d)) {for (h = r.map (na (e, "script"), Fa), i) ; l <m; l ++) j = e, l! == n && (j = r.clone (j,! 0,! 0), i && r.merge (h, na (j, "script"))), c .call (a [l], j, l); if (i) for (k = h [h.length-1] .ownerDocument, r.map (h, Ga), l = 0; l <i; l ++ ) j = h [l], la.test (j.type || "") &&! W.access (j, "globalEval") && r.contains (k, j) && (j.src? r._evalUrl && r. _evalUrl (j.src): p (j.textContent.replace (Da, ""), k))} retorna uma} função Ka (a, b, c) {for (var d, e = b? r.filter (b, a): a, f = 0; nulo! = (d = e [f]); f ++) c || 1! == d.nodeType || r.cleanData (na (d)), d. parentNode && (c && r.contains (d.ownerDocument, d) && oa (na (d, "script")), d.parentNode.removeChild (d)); retorna a} r.extend ({htmlPrefilter: function (a) {return a. substitua (za, "<$ 1> </ $ 2>")}, clone: ​​function (a, b, c) {var d, e, f, g, h = a.cloneNode (! 0), i = r. contém (a.ownerDocument, a); if (! (o.noCloneChecked || 1! == a.nodeType && 11! == a.nodeType || r.isXMLDoc (a))) para (g = na (h), f = na (a), d = 0, e = f.length; d <e; d ++) Ia (f [d], g [d]); se (b) se (c) para (f = f | | na (a), g = g || na (h), d = 0, e = comprimento; d <e; d ++) Ha (f [d], g [d]); else Ha (a, h); return g = na (h, "script"), g.length> 0 && oa (g,! i && na (a, "script")), h}, cleanData: function (a) {for (var b, c , d, e = r.event.special, f = 0; void 0! == (c = a [f]); f ++) if (U (c)) {if (b = c [W.expando]) {if (b.events) para (d em b.events) e [d]? r.event.remove (c, d): r.removeEvent (c, d, b.handle); c [W.expando] = vazio 0} c [X.expando] && (c [X.expando] = vazio 0)}}}), r.fn.extend ({desanexar: função (a) {retornar Ka (isto, a,! 0)}, remover: função (a) {retornar Ka (este, um )}, text: function (a) {return T (this, function (a) {return void 0 === a? r.text (this): this.empty (). each (function () {1! = = this.nodeType && 11! == this.nodeType && 9! == this.nodeType || (this.textContent = a)})}, null, a, argument.length)}, acrescente: function () {return Ja (this, argumentos, função (a) {if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {var b = Ea (este, a); b.appendChild ( a)}})}, precede: function () {retorna Ja (argumentos, função (a) {if (1 === this.nodeType || 11 === this.nodeType || 9 === this .nodeType) {var b = Ea (this, a); b.insertBefore (a, b.firstChild)}})}, before: function () {return Ja (argumentos, função (a) {this.parentNode && this .parentNode.insertBefore (a, this)})}, after: function () {return Ja (this, argumentos, função (a) {this.parentNode && this.parentNode.insertBefore (a, this.nextSibling)})}, vazio: function () {for (var a, b = 0; null! = (a = this [b]); b ++) 1 === a .nodeType && (r.cleanData (na (a,! 1)), a.textContent = ""); retorne isso}, clone: ​​function (a, b) {retorne a = null! = a && a, b = null == b? a: b, this.map (function () {return r.clone (this, a, b)})}, html: function (a) {return T (this, function (a) {var b = this [0] || {}, c = 0, d = this.length; if (void 0 === a && 1 === b.nodeType) retorna b.innerHTML; if ("string" == tipo de a &&! Aa. teste (a) &&! ma [(ka.exec (a) || ["", "]]) [1] .toLowerCase ()]) {a = r.htmlPrefilter (a); tente {for (; c <d; c ++) b = este [c] || {}, 1 === b.nodeType && (r.cleanData (na (b,! 1)), b.innerHTML = a); b = 0} catch ( e) {}} b && this.empty (). append (a)}, null, a, argument.length)}, replaceWith: function () {var a = []; return Ja (argumentos, função (b)) {var c = this.parentNode; r.inArray (this, a) <0 && (r.cleanData (na (this)), c && c.replaceChild (b, this))}, a)}}), r.each ({appendTo: "append", prependTo: " prepend ", insertBefore:" before ", insertAfter:" after ", replaceAll:" replaceWith "}, função (a, b) {r.fn [a] = função (a) {for (var c, d = [] , e = r (a), f = e.length-1, g = 0; g <= f; g ++) c = g === f? this: this.clone (! 0), r (e [g ]) [b] (c), h.apply (d, c.get ()); retorna this.pushStack (d)}}); var La = / ^ margin /, Ma = new RegExp ("^ (" + aa + ") (?! px) [az%] + $", "i"), Na = função (b) {var c = b.ownerDocument.defaultView; return c && c.opener || (c = a), c.getComputedStyle (b)} ;! function () {function b () {if (i) {i.style.cssText = "tamanho da caixa: caixa da borda; posição: relativa; exibição: bloco; margem: auto; borda: 1px; preenchimento: 1px; topo: 1%; largura: 50% ", i.innerHTML =" ", ra.appendChild (h); var b = a.getComputedStyle (i); c = "1%"! == b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50 % ", f =" 4px "=== b.marginRight, ra.removeChild (h), i = null}} var c, e, f, g, h = d.createElement (" div "), i = d .createElement ("div"); i.style && (i.style.backgroundClip = "caixa de conteúdo", i.cloneNode (! 0) .style.backgroundClip = "", o.clearCloneStyle = "content-box" == = i.style.backgroundClip, h.style.cssText = "borda: 0; largura: 8px; altura: 0; parte superior: 0; esquerda: -9999px; preenchimento: 0; margem superior: 1px; posição: absoluta", h.appendChild (i), r.extend (o, {posição de pixel: função () {retorno b (), c}, boxSizingReliable: função () {retorno b (), e}, pixelMarginRight: função () {retorno b (), f}, confiávelMarginLeft: function () {return b (), g}}))}} (); function Oa (a, b, c) {var d, e, f, g, h = a.style ; return c = c || Na (a), c &&(g = c.getPropertyValue (b) || c [b], ""! == g || r.contains (a.ownerDocument, a) || (g = r.style (a, b)) ,! o.pixelMarginRight () && Ma.test (g) && La.test (b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth, h.minWidth = h.maxWidth = h.width = g , g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0! == g? g + "": g} função Pa (a, b) {return { get: function () {return a ()? void exclua this.get: (this.get = b) .apply (this, argumentos)}}} var Qa = / ^ (nenhum | tabela (?! - c [ea ]). +) /, Ra = / ^ - /, Sa = {posição: "absoluta", visibilidade: "oculta", exibição: "bloco"}, Ta = {letterSpacing: "0", fontWeight: "400 "}, Ua = [" Webkit "," Moz "," ms "], Va = d.createElement (" div "). Style; function Wa (a) {if (a em Va) retorna a; var b = a [0] .toUpperCase () + a.slice (1), c = Ua.length; while (c -) if (a = Ua [c] + b, a em Va) retorna a} função Xa (a ) {var b = r.cssProps [a]; return b || (b = r.cssProps [a] = Wa (a) || a), b} função Ya (a, b, c) {var d = ba.exec (b); return d? Math.max (0, d [2] - (c || 0)) + (d [3] || "px"): b} função Za (a, b, c, d, e) { var f, g = 0; para (f = c === (d? "borda": "conteúdo")? 4: "largura" === b? 1: 0; f <4; f + = 2) " margem "=== c && (g + = r.css (a, c + ca [f] ,! 0, e)), d? (" conteúdo "=== c && (g- = r.css (a," preenchimento "+ ca [f] ,! 0, e))," margem "! == c && (g- = r.css (a," borda "+ ca [f] +" largura ",! 0, e) )) :( g + = r.css (a, "preenchimento" + ca [f] ,! 0, e), "preenchimento"! == c && (g + = r.css (a, "borda" + ca [f ] + "Width",! 0, e))); return g} função $ a (a, b, c) {var d, e = Na (a), f = Oa (a, b, e), g = "border-box" === r.css (a, "boxSizing",! 1, e); retorna Ma.test (f)? f: (d = g && (o.boxSizingReliable () || f == = a.style [b]), "automático"=== f && (f = a ["offset" + b [0] .toUpperCase () + b.slice (1)]), f = parseFloat (f) || 0, f + Za (a, b, c || (g? "borda": "conteúdo"), d, e) + "px")} r.extend ({cssHooks: {opacidade: {get: function (a, b) {if (b) {var c = Oa (a, "opacidade"); retornar "" === c? "1": c}}}}, cssNumber: {animationIterationCount:! 0, columnCount:! 0, fillOpacity:! 0, flexGrow :! 0, flexShrink:! 0, fontWeight:! 0, lineHeight:! 0, opacidade:! 0, ordem:! 0, órfãos:! 0, viúvas:! 0, zIndex:! 0, zoom:! 0}, cssProps: {"float": "cssFloat"}, style: function (a, b, c, d) {if (a && 3! == a.nodeType && 8! == a.nodeType && a.style) {var e, f, g, h = r.camelCase (b), i = Ra.test (b), j = a.style; return i || (b = Xa (h)), g = r.cssHooks [b] || r.cssHooks [ h], void 0 === c? g && "get" em g && void 0! == (e = g.get (a,! 1, d))? e: j [b] :( f = tipo de c ", string "=== f && (e = ba.exec (c)) && e [1] && (c = fa (a, b, e), f = "número"), nulo! = c && c === c && ("número" === f && (c + = e && e [ 3] || (r.cssNumber [h]? "": "Px")), o.clearCloneStyle || ""! == c || 0! == b.indexOf ("plano de fundo") || (j [b] = "herdar"), g && "conjunto" em g && void 0 === (c = g.set (a, c, d)) || (i? j.setProperty (b, c): j [b ] = c)), nulo 0)}}, css: function (a, b, c, d) {var e, f, g, h = r.camelCase (b), i = Ra.test (b); return i || (b = Xa (h)), g = r.cssHooks [b] || r.cssHooks [h], g && "get" em g && (e = g.get (a,! 0, c) ), nulo 0 === e && (e = Oa (a, b, d)), "normal" === e &&b em Ta && (e = Ta [b]), "" === c || c? ( f = parseFloat (e), c ===! 0 || isFinite (f)? f || 0: e): e}}), r.each (["height", "width"], função (a , b) {r.cssHooks [b] = {get: function (a, c, d) {se (c) retornar! Qa.teste (r.css (a, "display")) || a.getClientRects (). length && a.getBoundingClientRect (). width? $ a (a, b, d): ea (a, Sa, function () {return $ a (a, b, d)})}, set: function (a, c, d) {var e, f = d && Na (a), g = d && Za (a, b, d, "caixa de borda" = == r.css (a, "boxSizing",! 1, f), f); retorna g && (e = ba.exec (c)) && "px"! == (e [3] || "px" ) && (a.style [b] = c, c = r.css (a, b)), Ya (a, c, g)}}}), r.cssHooks.marginLeft = Pa (o.reliableMarginLeft, função (a, b) {se (b) retornar (parseFloat (Oa (a, "marginLeft")) || a.getBoundingClientRect (). left-ea (a, {marginLeft: 0}, function () {return a. getBoundingClientRect (). left})) + "px"}), r.each ({margin: "", padding: "", border: "Width"}, função (a, b) {r.cssHooks [a + b] = {expand: function (c) {for (var d = 0, e = {}, f = "string" == tipo de c? c.split (""): [c]; d <4;d ++) e [a + ca [d] + b] = f [d] || f [d-2] || f [0]; retorno e}}, La.test (a) || (r.cssHooks [a + b] .set = Ya)}), r.fn.extend ({css: função (a, b) {retorna T (essa, função (a, b, c) {var d, e, f = {}, g = 0; if (Array.isArray (b)) {for (d = Na (a), e = b.length; g <e; g ++) f [b [g]] = r.css ( a, b [g] ,! 1, d); return f} return void 0! == c? r.style (a, b, c): r.css (a, b)}, a, b, argumentos .length> 1)}}); function _a (a, b, c, d, e) {retorna novo _a.prototype.init (a, b, c, d, e)} r.Tween = _a, _a. prototype = {construtor: _a, init: função (a, b, c, d, e, f) {this.elem = a, this.prop = c, this.easing = e || r.easing._default, this .options = b, this.start = this.now = this.cur (), this.end = d, this.unit = f || (r.cssNumber [c]? "": "px")}, cur : function () {var a = _a.propHooks [this.prop]; retorna um && a.get? a.get (this): _ a.propHooks._default.get (this)}, execute: function (a) {var b , c = _a.propHooks [this.prop]; retorna this.options.duration? this.pos = b = r.easing [this.easing] (a,this.options.duration * a, 0,1, this.options.duration): this.pos = b = a, this.now = (this.end-this.start) * b + this.start, this.options .step && this.options.step.call (this.elem, this.now, this), c && c.set? c.set (this): _ a.propHooks._default.set (this), this}}, _ a.prototype. init.prototype = _a.prototype, _a.propHooks = {_ default: {get: function (a) {var b; return 1! == a.elem.nodeType || null! = a.elem [a.prop] && null == a.elem.style [a.prop]? a.elem [a.prop] :( b = r.css (a.elem, a.prop, ""), b && "auto"! == b? b: 0)}, defina: function (a) {r.fx.step [a.prop]? r.fx.step [a.prop] (a): 1! == a.elem.nodeType || null == a.elem.style [r.cssProps [a.prop]] &&! r.cssHooks [a.prop]? a.elem [a.prop] = a.now: r.style (a.elem, um .prop, a.now + a.unit)}}}, _ a.propHooks.scrollTop = _a.propHooks.scrollLeft = {set: function (a) {a.elem.nodeType && a.elem.parentNode && (a.elem [a .prop] = a.now)}}, r.easing = {linear: função (a) {retornar a}, swing: função (a) {return.5-Math.cos (a * Math.PI) / 2}, _ padrão: "swing"}, r.fx = _a.prototype.init, r.fx.step = {}; var ab, bb, cb = / ^ (?: alternar | mostrar | ocultar) $ /, db = / queueHooks $ /; function eb () {bb && ( d.hidden ===! 1 && a.requestAnimationFrame? a.requestAnimationFrame (eb): a.setTimeout (eb, r.fx.interval), r.fx.tick ())} função fb () {return a.setTimeout ( function () {ab = void 0}), ab = r.now ()} function gb (a, b) {var c, d = 0, e = {height: a}; para (b = b? 1: 0; d <4; d + = 2-b) c = ca [d], e ["margin" + c] = e ["padding" + c] = a; return b && (e.opacity = e.width = a), e} função hb (a, b, c) {para (var d, e = (kb.tweeners [b] || []). concat (kb.tweeners ["*"]), f = 0 , g = e.length; f <g; f ++) if (d = e [f] .call (c, b, a)) return d} função ib (a, b, c) {var d, e, f , g, h, i, j, k, l = "largura" em b || "altura" em b, m = isto, n = {}, o = estilo, p = a.nodeType &(a, "fxshow"); c.queue || (g = r._queueHooks (a, "fx"), nulo == g. sem fila && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () {g.unqueued || h ()}), g.unqueued ++, m.always (function () {m.always (function () {g .unqueued -, r.queue (a, "fx"). length || g.empty.fire ()})})); para (d em b) se (e = b [d], cb.teste (e)) {if (excluir b [d], f = f || "alternar" === e, e === (p? "ocultar": "mostrar")) {if ("mostrar"! = = e ||! q || vazio 0 === q [d]) continua; p =! 0} n [d] = q && q [d] || estilo r (a, d)} if (i =! r.isEmptyObject (b), i ||! r.isEmptyObject (n)) {l && 1 === a.nodeType && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display , null == j && (j = W.get (a, "exibição")), k = r.css (a, "exibição"), "nenhum" === k && (j? k = j: (ia ( [a] ,! 0), j = a.style.display || j, k = r.css (a, "exibição"),ia ([a]))), ("inline" === k || "bloco inline" === k && null! = j) && "none" === r.css (a, "float") && (i || (m.done (função () {o.display = j}), nulo == j && (k = o.display, j = "nenhum" === k? "": k)), o .display = "bloco em linha")), c.overflow && (o.overflow = "oculto", m.always (function () {o.overflow = c.overflow [0], o.overflowX = c.overflow [ 1], o.overflowY = c.overflow [2]})), i =! 1; para (d em n) i || (q? "Oculto" em q && (p = q.hidden): q = W .access (a, "fxshow", {display: j}), f && (q.hidden =! p), p && ia ([a] ,! 0), m.done (function () {p || ia ([ a]), W.remove (a, "fxshow"); para (d em n) r.style (a, d, n [d])})), i = hb (p? q [d]: 0 , d, m), d em q || (q [d] = i.start, p && (i.end = i.start, i.start = 0))}} função jb (a, b) {var c , d, e, f, g; para (c em a) se (d = r.camelCase (c), e = b [d], f = a [c], Matriz.isArray (f) && (e = f [1], f = a [c] = f [0]), c! == d && (a [d] = f, exclua a [c]), g = r. cssHooks [d], g && "expandir" em g) {f = g.expand (f), exclua a [d]; para (c em f) c em a || (a [c] = f [c], b [c] = e)} else b [d] = e} função kb (a, b, c) {var d, e, f = 0, g = kb.prefilters.length, h = r.Deferido () .sempre (function () {delete i.elem}), i = function () {if (e) return! 1; for (var b = ab || fb (), c = Math.max (0, j. startTime + j.duração-b), d = c / j.duração || 0, f = 1-d, g = 0, i = j.tweens.length; g <i; g ++) j.tweens [g] .run (f); return h.notifyWith (a, [j, f, c]), f <1 && i? c: (i || h.notifyWith (a, [j, 1,0]), h.resolveWith (a, [j]) ,! 1)}, j = h.promise ({elem: a, props: r.extend ({}, b), opta: r.extend (! 0, {specialEasing: {} , easing: r.easing._default}, c), originalProperties: b, originalOptions: c, startTime: ab || fb (), duração: c.duration, tweens: [], createTween: function (b, c) { var d = r.Tween (a, j.opts, b, c, j.opts.specialEasing [b] || j.opts.easing);return j.tweens.push (d), d}, stop: function (b) {var c = 0, d = b? j.tweens.length: 0; if (e) retorna isso; para (e =! 0 ; c <d; c ++) j.tweens [c] .run (1); return b? (h.notifyWith (a, [j, 1,0]), h.resolveWith (a, [j, b]) ): h.rejectWith (a, [j, b]), this}}), k = j.props; for (jb (k, j.opts.specialEasing); f <g; f ++) if (d = kb .prefilters [f] .call (j, a, k, j.opts)) retornam r.isFunction (d.stop) && (r._queueHooks (j.elem, j.opts.queue) .stop = r.proxy (d.stop, d)), d; return r.map (k, hb, j), r.isFunction (j.opts.start) && j.opts.start.call (a, j), j.progress ( j.opts.progress) .done (j.opts.done, j.opts.complete) .fail (j.opts.fail) .sempre (j.opts.always), r.fx.timer (r.extend ( i, {elem: a, anim: j, fila: j.opts.queue})), j} r.Animation = r.extend (kb, {interpolações: {"*": [function (a, b) { var c = this.createTween (a, b); return fa (c.elem, a, ba.exec (b), c), c}]}, tweener: function (a, b) {r.isFunction (a )? (b = a, a = ["*"]): a = a.match (L);para (var c, d = 0, e = comprimento; d <e; d ++) c = a [d], kb.tweeners [c] = kb.tweeners [c] || [], kb.tweeners [ c] .unshift (b)}, pré-filtros: [ib], pré-filtro: função (a, b) {b? kb.prefilters.unshift (a): kb.prefilters.push (a)}}), r.speed = function (a, b, c) {var d = a && "objeto" == tipo de a? r.extend ({}, a): {complete: c ||! c && b || r.isFunção (a) && a, duração: a, flexibilização: c && b || b &&! r.isFunction (b) && b}; return r.fx.off?d.duration=0:"number"!=typeof d.duration && (d.duration in r.fx .speeds? d.duration = r.fx.speeds [d.duration]: d.duration = r.fx.speeds._default), null! = d.queue && d.queue! ==! 0 || (d.queue = "fx"), d.old = d.complete, d.complete = function () {r.isFunction (d.old) && d.old.call (this), d.queue && r.dequeue (this, d.queue )}, d}, r.fn.extend ({fadeTo: function (a, b, c, d) {retorna this.filter (da) .css ("opacidade", 0).show (). end (). animate ({opacidade: b}, a, c, d)}, anima: função (a, b, c, d) {var e = r.isEmptyObject (a), f = r .speed (b, c, d), g = function () {var b = kb (this, r.extend ({}, a), f); (e || W.get (this, "finish")) ) && b.stop (! 0)}; return g.finish = g, e || f.queue ===! 1? this.each (g): this.queue (f.queue, g)}, pare: function (a, b, c) {var d = function (a) {var b = a.stop; delete a.stop, b (c)}; retorna "string"! = typeof a && (c = b, b = a, a = void 0), b && a! ==! 1 && this.queue (a || "fx", []), this.each (function () {var b =! 0, e = null! = a && a + "queueHooks ", f = r.timers, g = W.get (isto); se (e) g [e] && g [e] .para && d (g [e]); mais para (e em g) g [e] && g [e] .stop && db.test (e) && d (g [e]); para (e = comprimento; e -;) f [e] .elem! == isto || nulo! = a && f [e] .queue! == a || (f [e] .anim.stop (c), b =! 1, f.splice (e, 1)) ;! b && c || r.dequeue (this, a)}) },terminar:função (a) {retornar a! ==! 1 && (a = a || "fx"), this.each (function () {var b, c = W.get (this), d = c [a + "fila "], e = c [a +" queueHooks "], f = r.timers, g = d? d.length: 0; for (c.finish =! 0, r.queue (this, a, []), e && e.stop && e.stop.call (this,! 0), b = f.length; b -;) f [b] .elem === this && f [b] .queue === a && (f [b]. anim.stop (! 0), f.splice (b, 1)); para (b = 0; b <g; b ++) d [b] && d [b] .finish && d [b] .finish.call (this) ; delete c.finish})}}), r.each (["alternar", "mostrar", "ocultar"], função (a, b) {var c = r.fn [b]; r.fn [ b] = função (a, d, e) {return null == a || "booleano" == tipo de a? c.apply (this, argumentos): this.animate (gb (b,! 0), a, d, e)}}), r.each ({slideDown: gb ("show"), slideUp: gb ("hide"), slideToggle: gb ("toggle"), fadeIn: {opacity: "show"}, fadeOut: {opacidade: "ocultar"}, fadeToggle:{opacidade: "alternar"}}, função (a, b) {r.fn [a] = função (a, c, d) {retorna this.animate (b, a, c, d)}}), r .timers = [], r.fx.tick = function () {var a, b = 0, c = r.timers; para (ab = r.now (); b <comprimento.c; b ++) a = c [b], a () || c [b]! == a || c.splice (b -, 1); c.length || r.fx.stop (), ab = void 0}, r .fx.timer = função (a) {r.timers.push (a), r.fx.start ()}, r.fx.interval = 13, r.fx.start = function () {bb || ( bb =! 0, eb ())}, r.fx.stop = function () {bb = null}, r.fx.speeds = {slow: 600, fast: 200, _default: 400}, r.fn. atraso = função (b, c) {return b = r.fx? r.fx.speed [b] || b: b, c = c || "fx", this.queue (c, function (c, d ) {var e = a.setTimeout (c, b); d.stop = function () {a.clearTimeout (e)}})}, function () {var a = d.createElement ("input"), b = d.createElement ("select"), c = b.appendChild (d.createElement ("opção")); a.type = "caixa de seleção", o.checkOn = ""! == a.value, o.optSelected = c.selecionado, a = d.createElement ("input"), a.value = "t", a.type = "radio", o.radioValue = "t" === a.value} (); var lb, mb = r.expr.attrHandle ; r.fn.extend ({attr: function (a, b) {return T (this, r.attr, a, b, argument.length> 1)}, removeAttr: function (a) {return this.each ( function () {r.removeAttr (this, a)})}}), r.extend ({attr: function (a, b, c) {var d, e, f = a.nodeType; if (3! = = f && 8! == f && 2! == f) retornar "indefinido" == tipo de a.getAttribute? r.prop (a, b, c) :( 1 === f && r.isXMLDoc (a) || (e = r .attrHooks [b.toLowerCase ()] || (r.expr.match.bool.test (b)? lb: void 0)), void 0! == c? null === c? void r.removeAttr ( a, b): e && "set" em e && void 0! == (d = e.set (a, c, b))? d: (a.setAttribute (b, c + ""), c): e && "get "em e && null! == (d = e.get (a, b))? d: (d = r.find.attr (a, b),radio ", o.radioValue =" t "=== a.value} (); var lb, mb = r.expr.attrHandle; r.fn.extend ({attr: function (a, b) {return T ( isso, r.attr, a, b, argument.length> 1)}, removeAttr: function (a) {retorna this.each (function () {r.removeAttr (this, a)})}}), r. estender ({attr: função (a, b, c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) retornar "indefinido" == tipo de a. getAttribute? r.prop (a, b, c) :( 1 === f && r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool. teste (b)? lb: void 0)), void 0! == c? null === c? void r.removeAttr (a, b): e && "definido" em e && void 0! == (d = e. set (a, c, b))? d: (a.setAttribute (b, c + ""), c): e && "get" em e && null! == (d = e.get (a, b))? d : (d = r.find.attr (a, b),radio ", o.radioValue =" t "=== a.value} (); var lb, mb = r.expr.attrHandle; r.fn.extend ({attr: function (a, b) {return T ( isso, r.attr, a, b, argument.length> 1)}, removeAttr: function (a) {retorna this.each (function () {r.removeAttr (this, a)})}}), r. estender ({attr: função (a, b, c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) retornar "indefinido" == tipo de a. getAttribute? r.prop (a, b, c) :( 1 === f && r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool. teste (b)? lb: void 0)), void 0! == c? null === c? void r.removeAttr (a, b): e && "definido" em e && void 0! == (d = e. set (a, c, b))? d: (a.setAttribute (b, c + ""), c): e && "get" em e && null! == (d = e.get (a, b))? d : (d = r.find.attr (a, b),argumentos.length> 1)}, removeAttr: function (a) {retorna this.each (function () {r.removeAttr (this, a)})}}), r.extend ({attr: function (a, b , c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) retornar "indefinido" == tipo de a.getAttribute? r.prop (a, b, c) :( 1 === f && r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool.test (b)? lb: void 0) ), void 0! == c? null === c? void r.removeAttr (a, b): e && "conjunto" em e && void 0! == (d = e.set (a, c, b))? d: (a.setAttribute (b, c + ""), c): e && "get" em e && null! == (d = e.get (a, b))? d: (d = r.find.attr ( a, b)argumentos.length> 1)}, removeAttr: function (a) {retorna this.each (function () {r.removeAttr (this, a)})}}), r.extend ({attr: function (a, b , c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) retornar "indefinido" == tipo de a.getAttribute? r.prop (a, b, c) :( 1 === f && r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool.test (b)? lb: void 0) ), void 0! == c? null === c? void r.removeAttr (a, b): e && "conjunto" em e && void 0! == (d = e.set (a, c, b))? d: (a.setAttribute (b, c + ""), c): e && "get" em e && null! == (d = e.get (a, b))? d: (d = r.find.attr ( a, b)& r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool.test (b)? lb: void 0)), void 0! == c ? null === c? void r.removeAttr (a, b): e && "conjunto" em e && void 0! == (d = e.set (a, c, b))? d: (a.setAttribute (b , c + ""), c): e && "obtém" em e && null! == (d = e.get (a, b))? d: (d = r.find.attr (a, b),& r.isXMLDoc (a) || (e = r.attrHooks [b.toLowerCase ()] || (r.expr.match.bool.test (b)? lb: void 0)), void 0! == c ? null === c? void r.removeAttr (a, b): e && "conjunto" em e && void 0! == (d = e.set (a, c, b))? d: (a.setAttribute (b , c + ""), c): e && "obtém" em e && null! == (d = e.get (a, b))? d: (d = r.find.attr (a, b),
null == d? void 0: d))}, attrHooks: {tipo: {set: function (a, b) {if (! o.radioValue && "radio" === b && B (a, "input")) { var c = a.value; retorna a.setAttribute ("tipo", b), c && (a.value = c), b}}}}, removeAttr: função (a, b) {var c, d = 0, e = b && b.match (L); if (e && 1 === a.nodeType) while (c = e [d ++]) a.removeAttribute (c)}}), lb = {set: function (a, b, c ) {return b ===! 1? r.removeAttr (a, c): a.setAttribute (c, c), c}}, r.each (r.expr.match.bool.source.match (/ \ w + / g), função (a, b) {var c = mb [b] || r.find.attr; mb [b] = função (a, b, d) {var e, f, g = b. toLowerCase (); return d || (f = mb [g], mb [g] = e, e = null! = c (a, b, d)? g: null, mb [g] = f), e }}); var nb = / ^ (?: input | select | textarea | button) $ / i, ob = / ^ (?: a | area) $ / i; r.fn.extend ({prop: function ( a, b) {retorna T (este, r.prop, a, b, argumentos.length> 1)}, removeProp: função (a) {retorna this.each (function () {exclua este [r.propFix [a ] || a]})}}), r.estender ({prop: function (a, b, c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) return 1 === f && r.isXMLDoc ( a) || (b = r.propFix [b] || b, e = r.propHooks [b]), nulo 0! == c? e && "definido" em e && nulo 0! == (d = e.set (a, c, b))? d: a [b] = c: e && "get" em e && null! == (d = e.get (a, b))? d: a [b]}, propHooks: {tabIndex: {get: function (a) {var b = r.find.attr (a, "tabindex"); return b? parseInt (b, 10): nb.test (a.nodeName) || ob.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"for": "htmlFor", "class": "className"}}), o.optSelected || (r.propHooks.selected = {get: function (a) {var b = a.parentNode; retorna b && b.parentNode && b.parentNode.selectedIndex, null}, sepropFix [b] || b, e = r.propHooks [b]), void 0! == c? e && "set" em e && void 0! == (d = e.set (a, c, b))? d: a [b] = c: e && "get" em e && null! == (d = e.get (a, b))? d: a [b]}, propHooks: {tabIndex: {get: function (a ) {var b = r.find.attr (a, "tabindex"); retorna b? parseInt (b, 10): nb.test (a.nodeName) || ob.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"for": "htmlFor", "class": "className"}}), o.optSelected || (r.propHooks.selected = {get: function (a) { var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null}, sepropFix [b] || b, e = r.propHooks [b]), void 0! == c? e && "set" em e && void 0! == (d = e.set (a, c, b))? d: a [b] = c: e && "get" em e && null! == (d = e.get (a, b))? d: a [b]}, propHooks: {tabIndex: {get: function (a ) {var b = r.find.attr (a, "tabindex"); retorna b? parseInt (b, 10): nb.test (a.nodeName) || ob.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"for": "htmlFor", "class": "className"}}), o.optSelected || (r.propHooks.selected = {get: function (a) { var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null}, sereturn b? parseInt (b, 10): nb.test (a.nodeName) || ob.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"for": "htmlFor" , "class": "className"}}), o.optSelected || (r.propHooks.selected = {get: function (a) {var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null} sereturn b? parseInt (b, 10): nb.test (a.nodeName) || ob.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"for": "htmlFor" , "class": "className"}}), o.optSelected || (r.propHooks.selected = {get: function (a) {var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null} set: function (a) {var b = a.parentNode; b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex)}}), r.each (["tabIndex", "readOnly", "maxLength", " cellSpacing "," cellPadding "," rowSpan "," colSpan "," useMap "," frameBorder "," contentEditable "], function () {r.propFix [this.toLowerCase ()] = this}); function pb ( a) {var b = a.match (L) || []; retorna b.join ("")} função qb (a) {retorna a.getAttribute && a.getAttribute ("classe") || ""} r. fn.extend ({addClass: function (a) {var b, c, d, e, f, g, h, i = 0; if (r.isFunction (a)) retorna this.each (function (b) { r (this) .addClass (a.call (this, b, qb (this)))}); if ("string" == tipo de a && a) {b = a.match (L) || []; while ( c = isto [i ++]) if (e = qb (c), d = 1 === c.nodeType && "" + pb (e) + "") {g = 0;while (f = b [g ++]) d.indexOf ("" + f + "") <0 && (d + = f + ""); h = pb (d), e! == h && c.setAttribute ("classe", h )}} retorne isso}, removeClass: function (a) {var b, c, d, e, f, g, h, i = 0; if (r.isFunction (a)) retorne this.each (function (b ) {r (this) .removeClass (a.call (this, b, qb (this)))}); if (! argument.length) retorna this.attr ("class", ""); if ("string "== tipo de a && a) {b = a.match (L) || []; while (c = this [i ++]) if (e = qb (c), d = 1 === c.nodeType &&" "+ pb (e) + "") {g = 0; while (f = b [g ++]) while (d.indexOf ("" + f + ""))> - 1) d = d. substituir ("" + f + " "," "); h = pb (d), e! == h && c.setAttribute (" classe ", h)}} retorne isso}, toggleClass: function (a, b) {var c = tipo de a; return" booleano "== tipo de b &&" string "=== c? b? this.addClass (a):this.removeClass (a): r.isFunction (a)? this.each (function (c) {r (this) .toggleClass (a.call (this, c, qb (this), b), b)}) : this.each (function () {var b, d, e, f; if ("string" === c) {d = 0, e = r (this), f = a.match (L) || []; while (b = f [d ++]) e.hasClass (b)? e.removeClass (b): e.addClass (b)} else void 0! == a && "booleano"! == c || ( b = qb (this), b && W.set (this, "__ className __", b), this.setAttribute && this.setAttribute ("class", b || a ===! 1? "": W.get (this, " __className __ ") ||" "))})}, hasClass: function (a) {var b, c, d = 0; b =" "+ a +" "; while (c = this [d ++]) if (1 === c.nodeType && ("" + pb (qb (c)) + ""). índiceDe (b)> - 1) return! 0; return! 1}}); var rb = / \ r / g; r.fn.extend ({val: function (a) {var b, c, d, e = this [0]; {if (argument.length) retorna d = r.isFunction (a), this.each (function (c) {var e; 1 === isso.nodeType && (e = d? a.call (this, c, r (this) .val ()): a, null == e? e = "": "number" == tipo de e? e + = "": matriz .isArray (e) && (e = r.map (e, função (a) {return null == a? "": a + ""})), b = r.valHooks [this.type] || r. valHooks [this.nodeName.toLowerCase ()], b && "set" em b && void 0! == b.set (this, e, "value") || (this.value = e))}); if (e) return b = r.valHooks [e.type] || r.valHooks [e.nodeName.toLowerCase ()], b && "get" em b && void 0! == (c = b.get (e, "valor")) ? c: (c = e.value, "string" == tipo de c? c.replace (rb, ""): null == c? "": c)}}}), r.extend ({valHooks: {opção: {obter: função (a) {var b = r.find.attr (a, "valor"); retornar nulo! = b? b: pb (r.text (a))}}, selecione: { get: function (a) {var b, c, d, e = a.options, f = a.selectedIndex, g = "selecionar um" === a.type, h = g? null: [],i = g? f + 1: e.length; para (d = f <0? i: g? f: 0; d <i; d ++) if (c = e [d], (c.selected || d === f) &&! c.disabled && (! c.parentNode.disabled ||! B (c.parentNode, "optgroup")))) {if (b = r (c) .val (), g) retornar b ; h.push (b)} retorne h}, defina: function (a, b) {var c, d, e = a.options, f = r.makeArray (b), g = e.length; while (g -) d = e [g], (d.selected = r.inArray (r.valHooks.option.get (d), f)> - 1) && (c =! 0); return c || (a .selectedIndex = -1), f}}}}), r.each (["radio", "checkbox"], function () {r.valHooks [this] = {set: function (a, b) {if (Array.isArray (b)) retorna a.checked = r.inArray (r (a) .val (), b)> - 1}}, o.checkOn || (r.valHooks [this] .get = function (a) {return null === a.getAttribute ("value")? "on": a.value})}); var sb = / ^ (?: focusinfocus | focusoutblur) $ /; r.extend (r .event, {trigger: function (b, c, e, f) {var g, h, i, j, k, m, n, o = [e || d], p = l.call (b, " tipo ")? b.type: b, q = l.call (b,"namespace")? b.namespace.split ("."): []; if (h = i = e = e | e d, 3! == e.nodeType && 8! == e.nodeType &&! sb.test ( p + r.event.triggered) && (p.indexOf (".")> - 1 && (q = p.split ("."), p = q.shift (), q.sort ()), k = p.indexOf (":") <0 && "em" + p, b = b [r.expando]? b: novo r.Event (p, "objeto" == tipo de b && b), b.isTrigger = f? 2 : 3, b.namespace = q.join ("."), B.rnamespace = b.namespace? New RegExp ("(^ | \\.)" + Q.join ("\\. (?:. * \\. |) ") +" (\\. | $) "): null, b.result = nulo 0, b.target || (b.target = e), c = nulo == c? [b ]: r.makeArray (c, [b]), n = r.event.special [p] || {}, f ||! n.trigger || n.trigger.apply (e, c)! == ! 1)) {if (! F &&! N.noBubble &&! R.isWindow (e)) {for (j = n.delegateType || p, sb.test (j + p) || (h = h.parentNode)) ; h; h = h.parentNode) o.push (h), i = h; i === (e.ownerDocument || d) &&o.push (i.defaultView || i.parentWindow || a)} g = 0; while ((h = o [g ++]) &&! b.isPropagationStopped ()) b.type = g> 1? j: n .bindType || p, m = (W.get (h, "eventos") || {}) [b.type] && W.get (h, "identificador"), m && m.apply (h, c), m = k && h [k], m && m.apply && U (h) && (b.result = m.apply (h, c), b.result ===! 1 && b.preventDefault ()); return b.type = p, f | | b.isDefaultPrevented () || n._default && n._default.apply (o.pop (), c)! ==! 1 ||! U (e) || k && r.isFunction (e [p]) &&! r .isWindow (e) && (i = e [k], i && (e [k] = nulo), r.event.triggered = p, e [p] (), r.event.triggered = nulo 0, i && ( e [k] = i)), b.result}}, simule: function (a, b, c) {var d = r.extend (novo r.Event, c, {tipo: a, isSimulated:! 0} ); r.event.trigger (d, null, b)}}), r.fn.extend ({trigger: function (a, b) {retorna this.each (function () {r.event.trigger (a , b, this)})}, triggerHandler:function (a, b) {var c = this [0]; se (c) retornar r.event.trigger (a, b, c,! 0)}}), r.each ("foco borrado em foco em foco) clique em dblclick mouse com mouse mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu ".split (" "), função (a, b) {r.fn [b] = função (a, c) {return argument.length> 0? This.on (b, nulo, a, c): this.trigger (b)}}), r.fn.extend ({hover: function (a, b) {retorna this.mouseenter (a) .mouseleave (b || a)}}), o.focusin = "onfocusin" em a, o.focusin || r.each ({focus: "focusin", blur: "focusout"}, função (a, b) { var c = função (a) {r.event.simulate (b, a.target, r.event.fix (a))}; r.event.special [b] = {setup: function () {var d = this.ownerDocument || this, e = W.access (d, b); e || d.addEventListener (a, c,! 0), W.access (d, b, (e || 0) +1) } teardown: function () {var d = this.ownerDocument || isto, e = W.access (d, b) -1; e? W.access (d, b, e) :( d.removeEventListener (a, c,! 0), W.remove (d, b))}}}); var tb = a.location, ub = r.now (), vb = / \? /; r.parseXML = função (b) {var c; if (! b || "string"! = typeof b) return null; tente {c = (novo a.DOMParser) .parseFromString (b, "text / xml")} catch (d) {c = void 0} retorne c &&! c.getElementsByTagName ("parsererror"). length || r.error ("XML inválido:" + b), c}; var wb = / \ [\] $ /, xb = / \ r? \ N / g, yb = / ^ (?: enviar | botão | imagem | redefinir | file) $ / i, zb = / ^ (?: input | select | textarea | keygen) / i; function Ab (a, b, c, d) {var e; if (Array.isArray (b)) r. cada (b, função (b, e) {c || wb.test (a)? d (a, e): Ab (a + "[" + ("objeto" == tipo de e && null! = e? b: " ") +"] ", e, c, d)}); else if (c ||" object "! == r.type (b)) d (a, b); else for (e em b) Ab (a + "[" + e + "]", b [e], c, d)} r.param = função (a, b) {var c, d = [], e = função (a,b) {var c = r.isFunção (b)? b (): b; d [comprimento.d] = encodeURIComponent (a) + "=" + encodeURIComponent (null == c? "": c)}; se (Array.isArray (a) || a.jquery &&! R.isPlainObject (a)) r.each (a, function () {e (this.name, this.value)}); mais para (c em a) Ab (c, a [c], b, e); return d.join ("&")}, r.fn.extend ({serialize: function () {return r.param (this.serializeArray ())} , serializeArray: function () {retorna this.map (function () {var a = r.prop (this, "elements"); retorna um? r.makeArray (a): this}). filter (function () { var a = this.type; retorna this.name &&! r (this) .is (": disabled") && zb.test (this.nodeName) &&! yb.test (a) && (this.checked ||! ja. teste (a))}). map (function (a, b) {var c = r (this) .val (); return null == c? null: Array.isArray (c)? r.map (c, função (a) {retornar {nome: b.name, valor: a.replace (xb, "\ r \ n")}}): {nome: b.name, valor: c.substitua (xb, "\ r \ n")}}). get ()}}); var Bb = /% 20 / g, Cb = / #. * $ /, Db = / ([? &]) _ = [^ &] * /, Eb = / ^ (. *?): [\ T] * ([^ \ r \ n] *) $ / gm, Fb = / ^ (?: sobre | app | app- armazenamento |. + - extensão | arquivo | res | widget): $ /, Gb = / ^ (?: GET | HEAD) $ /, Hb = / ^ \ / \ //, Ib = {}, Jb = {} , Kb = "* /". Concat ("*"), Lb = d.createElement ("a"); Lb.href = tb.href; função Mb (a) {função de retorno (b, c) {"string "! = tipo de b && (c = b, b =" * "); var d, e = 0, f = b.toLowerCase (). match (L) || []; if (r.isFunction (c)) while (d = f [e ++]) "+" === d [0]? (d = d.slice (1) || "*", (a [d] = a [d] || []) .unshift (c)) :( a [d] = a [d] || []). push (c)}} função Nb (a, b, c, d) {var e = {}, f = a === Jb; função g (h) {var i; retorno e [h] =! 0, r.each (a [h] || [], função (a, h) {var j = h (b, c, d); return "string"! = tipo de j || f || e [j]? f?! (i = j): void 0: (b.dataTypes.unshift (j), g (j), ! 1)}), i} retorna g (b.dataTypes [0]) ||! E ["*"] && g ("*")} função Ob (a, b) {var c, d, e = r.ajaxSettings.flatOptions || {}; para (c em b) vazio 0! == b [c] && (( e [c]? a: d || (d = {})) [c] = b [c]); retorna d && r.extend (! 0, a, d), a} função Pb (a, b, c ) {var d, e, f, g, h = a.contents, i = a.dataTypes; while ("*" === i [0]) i.shift (), void 0 === d && (d = a.mimeType || b.getResponseHeader ("Tipo de conteúdo")); if (d) for (e em h) if (h [e] && h [e] .test (d)) {i.unshift (e ); break} if (i [0] em c) f = i [0]; else {for (e em c) {if (! i [0] || a.conversores [e + "" + i [0] ]) {f = e; break} g || (g = e)} f = f || g} se (f) retornar f! == i [0] && i.unshift (f), c [f]} função Qb (a, b, c, d) {var e, f, g, h, i, j = {}, k = a.dataTypes.slice (); if (k [1]) para (g em um .conversores) j [g.toLowerCase ()] = a.conversores [g]; f = k.shift (); while (f) if (a.responseFields [f] && (c [a.responseFields [f]]) = b) ,! i && && a.dataFilter && (b = a.dataFilter (b, a.dataType)), i = f, f = k.shift ()) if ("*" === f) f = i; caso contrário, if ("*"! == i && i! == f) {if (g = j [i + "" + f] || j ["*" + f] ,! g) para (e em j) se (h = e.split ("")), h [1] === f && (g = j [i + "" + h [0]] || j ["*" + h [0]])) {g ===! 0? g = j [e]: j [e]! ==! 0 && (f = h [0], k.unshift (h [1])); break} if (g! ==! 0) if (g && a ["lança"]) b = g (b); caso contrário, tente { b = g (b)} catch (l) {return {state: "parsererror", erro: g? l: "Nenhuma conversão de" + i + "para" + f}}} retorna {state: "success", dados : b}} r.extend ({active: 0, lastModified: {}, etag: {}, ajaxSettings: {url: tb.href, tipo: "GET", isLocal: Fb.test (tb.protocol), global :! 0, processData:! 0, assíncrono:! 0, contentType: "application / x-www-form-urlencoded; charset = UTF-8", aceita: {"*": Kb, texto: "text / plain" , html: "text / html", xml: "application / xml, text / xml ", json:" application / json, text / javascript "}, conteúdo: {xml: / \ bxml \ b /, html: / \ bhtml /, json: / \ bjson \ b /} , responseFields: {xml: "responseXML", texto: "responseText", json: "responseJSON"}, conversores: {"* text": String, "text html":! 0, "text json": JSON.parse, "text xml": r.parseXML}, flatOptions: {url:! 0, contexto:! 0}}, ajaxSetup: function (a, b) {return b? Ob (Ob (a (r.ajaxSettings), b) : Ob (r.ajaxSettings, a)}, ajaxPrefilter: Mb (Ib), ajaxTransport: Mb (Jb), ajax: function (b, c) {"objeto" == tipo de b && (c = b, b = void 0 ), c = c || {}; var e, f, g, h, i, j, k, l, m, n, o = r.ajaxSetup ({}, c), p = o.context || o, q = o.context && (p.nodeType || p.jquery)? r (p): r.event, s = r.Deferido (), t = r.Callbacks ("uma vez memória"), u = o .statusCode || {}, v = {}, w = {}, x = "cancelado", y = {readyState: 0,getResponseHeader: function (a) {var b; if (k) {if (! h) {h = {}; while (b = Eb.exec (g)) h [b [1] .toLowerCase ()] = b [2]} b = h [a.toLowerCase ()]} retorna nulo == b? Nulo: b}, getAllResponseHeaders: function () {retorna k? G: null}, setRequestHeader: function (a, b) {return null == k && (a = w [a.toLowerCase ()] = w [a.toLowerCase ()] || a, v [a] = b), isto}, overrideMimeType: function (a) {return null == k && (o.mimeType = a), this}, statusCode: function (a) {var b; if (a) if (k) y.sempre (a [y.status]); senão para (b em a) u [b] = [u [b], a [b]]; retorna isso}, aborta: function (a) {var b = a || x; retorna e && e.abort (b), A (0, b), this}}; if (promessa (y), o.url = ((b || o.url || tb.href) + ""). replace (Hb, tb.protocol + "//"), o .type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*"). toLowerCase (). match (L) || ["" ], null == o.crossDomain) {j = d.createElement ("a"); tente {j.href = o.url, j.href = j.href, o.crossDomain = Lb.protocol + "//" + Lb.host! = j.protocol + "//" + j.host} catch (z) {o.crossDomain =! 0}} if (o.data && o. processData && "string"! = tipo de o.data && (o.data = r.param (o.data, o.traditional)), Nb (Ib, o, c, y), k) return y; l = r.event && o .global, l && 0 === r.active ++ && r.event.trigger ("ajaxStart"), o.type = o.type.toUpperCase (), o.hasContent =! Gb.test (o.type), f = o.url.replace (Cb, ""), o.hasContent? o.data && o.processData && 0 === (o.contentType || ""). indexOf ("application / x-www-form-urlencoded") && (o.data = o.data.replace (Bb, "+")) :( n = o.url.slice (f.length), o.data && (f + = (vb.test (f)? "&" : "?") + o.data, exclua o.data), o.cache ===! 1 && (f = f.replace (Db, "$ 1")), n = (vb.test (f)? "& ":"? ") + "_ =" + ub ++ + n), o.url = f + n), o.ifModified && (r.lastModified [f] && y.setRequestHeader ("If-Modified-Since", r.lastModified [f]) , r.etag [f] && y.setRequestHeader ("Se nenhuma correspondência for", r.etag [f])), (o.data && o.hasContent && o.contentType! ==! 1 || c.contentType) && y.setRequestHeader ("Tipo de conteúdo", o.contentType), y.setRequestHeader ("Accept", o.dataTypes [0] && o.accepts [o.dataTypes [0]]? O.accepts [o.dataTypes [0]] ("*"! == o.dataTypes [0]? "," + Kb + "; q = 0,01": ""): o. aceita ["*"]); para (m em cabeçalhos) y. setRequestHeader (m, o.headers [m]); if (o.beforeSend && (o.beforeSend.call (p, y, o) ===! 1 || k)) retorna y.abort (); if (x = "abortar", t.add (o.complete), y.done (o.success), y.fail (o.error), e = Nb (Jb, o, c, y)) {if (y. readyState = 1, l && q.trigger ("ajaxSend", [y, o]), k) retorna y; o.async && o.timeout> 0 && (i = a.setTimeout (function () {y.abort ("timeout")}, o.timeout) ); tente {k =! 1, e.envie (v, A)} captura (z) {se (k) jogue z; A (-1, z)}} mais A (-1, "Sem transporte") ; função A (b, c, d, h) {var j, m, n, v, w, x = c; k || (k =! 0, i && a.clearTimeout (i), e = nulo 0, g = h || "", y.readyState = b> 0? 4: 0, j = b> = 200 && b <300 || 304 === b, d && (v = Pb (o, y, d)), v = Qb (o, v, y, j), j? (O.ifModificado && (w = y.getResponseHeader ("Última modificação")), w && (r.lastModified [f] = w), w = y.getResponseHeader ( "etag"), w && (r.etag [f] = w)), 204 === b || "HEAD" === o.type? x = "nocontent": 304 === b? x = " não modificado ":( x = v.state, m = v.data, n = v.erro, j =! n)) :( n = x,! b && x || (x =" erro ", b <0 && (b = 0))), y.status = b, y.statusText = (c || x) + "", j? s.resolveWith (p, [m, x, y]): s.rejectWith (p, [y, x, n]), y.statusCode (u), u = nulo 0, l && q.trigger ( j? "ajaxSuccess": "ajaxError", [y, o, j? m: n]), t.fireWith (p, [y, x]), l && (q.trigger ("ajaxComplete", [y, o ]), - r.active || r.event.trigger ("ajaxStop")))} retornar y}, getJSON: function (a, b, c) {retornar r.get (a, b, c, " json ")}, getScript: function (a, b) {retorna r.get (a, void 0, b," script ")}}), r.each ([" get "," post "], function ( a, b) {r [b] = função (a, c, d, e) {retorna r.isFunção (c) && (e = e || d, d = c, c = nulo 0), r.ajax (r.extend ({url: a, tipo: b, dataType: e, dados: c, sucesso: d}, r.isPlainObject (a) && a))}}), r._evalUrl = function (a) {return r.ajax ({url: a, digite: "GET", dataType: "script", cache:! 0, assíncrono:! 1, global:! 1, "lança":! 0})}, r.fn. estender ({wrapAll: function (a) {var b;retorne [0] && (r.isFunction (a) && (a = chamada.de (este [0])), b = r (a, este [0] .ownerDocument) .eq (0) .clone (! 0), este [0] .parentNode && b.insertBefore (this [0]), b.map (function () {var a = this; while (a.firstElementChild) a = a.firstElementChild; return a}). Append ( this)), this}, wrapInner: function (a) {return r.isFunction (a)? this.each (function (b) {r (this) .wrapInner (a.call (this, b))}): Esta função (function () {var b = r (this), c = b.contents (); c.length? c.wrapAll (a): b.append (a)})}, wrap: function (a ) {var b = r.isFunção (a); retorna this.each (function (c) {r (this) .wrapAll (b? a.call (this, c): a)})}, desembrulhe: function ( a) {return this.parent (a) .not ("body"). each (function () {r (this) .placeWith (this.childNodes)}), this}}), r.expr.pseudos.hidden = function (a) {return! r.expr.pseudos.visible (a)}, r.expr.pseudos.visible = function (a) {return !! (a.offsetWidth || a.offsetHeight || a.getClientRects ()length)}, r.ajaxSettings.xhr = function () {try {return a.XMLHttpRequest} catch (b) {}}; var Rb = {0: 200,1223: 204}, Sb = r.ajaxSettings.xhr (); o.cors = !! Sb && "withCredentials" em Sb, o.ajax = Sb = !! Sb, r.ajaxTransport (função (b) {var c, d; if (o.cors || Sb &&! b .crossDomain) return {send: function (e, f) {var g, h = b.xhr (); if (h.open (b.type, b.url, b.async, b.username, b.password ), b.xhrFields) para (g em b.xhrFields) h [g] = b.xhrFields [g]; b.mimeType && h.overrideMimeType && h.overrideMimeType (b.mimeType), b.crossDomain || e ["X-Requested -With "] || (e [" X-solicitado-com "] =" XMLHttpRequest "); para (g em e) h.setRequestHeader (g, e [g]); c = function (a) {return function () {c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a? h.abort (): "erro" === a? " número "! = tipo de h.status? f (0,"erro "): f (h.status, h.statusText): f (Rb [h.status] || h.status, h.statusText," text "! == (h.responseType ||" text ") | | "string"! = tipo de h.responseText? {binário: h.response}: {texto: h.responseText}, h.getAllResponseHeaders ()))}}, h.onload = c (), d = h.onerror = c ("erro"), nulo 0! == h.onabort? h.onabort = d: h.onreadystatechange = function () {4 === h.readyState && a.setTimeout (function () {c && d ()}) }, c = c ("abortar"); tente {h.send (b.hasContent && b.data || nulo)} catch (i) {if (c) throw i}}, abort: function () {c &&c () }}}), r.ajaxPrefilter (função (a) {a.crossDomain && (a.contents.script =! 1)}), r.ajaxSetup ({aceita: {script: "text / javascript, application / javascript, application / ecmascript, aplicativo / x-ecmascript "}, conteúdo: {script: / \ b (?: java | ecma) script \ b /}, conversores: {" script de texto ":função (a) {return r.globalEval (a), a}}}), r.ajaxPrefilter ("script", função (a) {void 0 === a.cache && (a.cache =! 1), a .crossDomain && (a.type = "GET")}), r.ajaxTransport ("script", função (a) {if (a.crossDomain) {var b, c; return {send: function (e, f) { b = r ("<script>") .prop ({charset: a.scriptCharset, src: a.url}). on ("erro de carregamento", c = função (a) {b.remove (), c = nulo, a && f ("erro" === a.type? 404: 200, a.type)}), d.head.appendChild (b [0])}, abort: function () {c && c ()}}} }); var Tb = [], Ub = / (=) \? (? = & | $) | \? \? /; r.ajaxSetup ({jsonp: "retorno de chamada", jsonpCallback: function () {var a = Tb.pop () || r.expando + "_" + ub ++; retorne isso [a] =! 0, a}}), r.ajaxPrefilter ("json jsonp", função (b, c, d) {var e, f, g, h = b.jsonp! ==! 1 && (Ub.test (b.url)? "url": "string" == tipo de b.data && 0 === (b.contentType || ""). IndexOf ("application / x-www-form-urlencoded") && Ub.test (b.data) && "data"); if (h || "jsonp" === b.dataTypes [0]) return e = b.jsonpCallback = r.isFunction (b.jsonpCallback)? b.jsonpCallback (): b.jsonpCallback, h? b [h] = b [h]. substitua ( Ub, "$ 1" + e): b.jsonp! ==! 1 && (b.url + = (teste vb (b.url)? "&": "?") + B.jsonp + "=" + e) , b.converters ["script json"] = function () {return g || erro r (e + "não foi chamado"), g [0]}, b.dataTypes [0] = "json", f = a [e], a [e] = função () {g = argumentos}, d.always (função () {void 0 === f? r (a) .removeProp (e): a [e] = f , b [e] && (b.jsonpCallback = c.jsonpCallback, Tb.push (e)), g && r.isFunction (f) && f (g [0]), g = f = 0 (vazio)}, "script"} ), o.createHTMLDocument = function () {var a = implementação d.createHTMLDocument (""). body; retorna a.innerHTML = "<form> </form> <form> </form>", 2 === a.childNodes.length} (), r.parseHTML = function (a , b, c) {if ("string"! = typeof a) return []; "boolean" == typeof b && (c = b, b =! 1); var e, f, g; return b || ( o.createHTMLDocument? (b = d.implementation.createHTMLDocument (""), e = b.createElement ("base"), e.href = local.href, b.head.appendChild (e)): b = d), f = C.exec (a), g =! c && [], f? [b.createElement (f [1])] :( f = qa ([a], b, g), g &&g.length && r (g) .remove (), r.merge ([], f.childNodes))}, r.fn.load = function (a, b, c) {var d, e, f, g = isto, h = a.indexOf (""); return h> -1 && (d = pb (a.slice (h)), a = a.slice (0, h)), r.isFunção (b)? (c = b, b = vazio 0): b && "objeto" == tipo de b && (e = "POST"), g.length> 0 && r.ajax ({url: a, type:e || "GET", dataType: "html", dados: b}). done (função (a) {f = argumentos, g.html (d? r ("<div>") .append (r.parseHTML (a)). find (d): a)}). always (c && function (a, b) {g.each (function () {c.apply (this, f || [a.responseText, b, a] )})}), this}, r.each (["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {r.fn [ b] = função (a) {retorna this.on (b, a)}}), r.expr.pseudos.animated = função (a) {retorna r.grep (r.timers, função (b) {retorna a === b.elem}). length}, r.offset = {setOffset: function (a, b, c) {var d, e, f, g, h, i, j, k = r.css (a , "posição"), l = r (a), m = {}; "estático" === k && (a.style.posição = "relativa"), h = l.offset (), f = r.css (a, "top"), i = r.css (a, "esquerda"), j = ("absoluto" === k || "fixo" === k) && (f + i).indexOf ("auto")> -1, j? (d = l.position (), g = d.top, e = d.left) :( g = parseFloat (f) || 0, e = parseFloat (i ) || 0), r.isFunção (b) && (b = b.call (a, c, r.extend ({}, h))), nulo! = B.top && (m.top = b.top -h.top + g), null! = b.left && (m.left = b.left-h.left + e), "using" em b? b.using.call (a, m): l.css (m)}}, r.fn.extend ({offset: function (a) {if (argument.length) retorna nulo 0 === a? this: this.each (function (b) {r.offset.setOffset (this, a, b)}); var b, c, d, e, f = this [0]; if (f) retorna f.getClientRects (). length? (d = f.getBoundingClientRect (), b = f.ownerDocument, c = b.documentElement, e = b.defaultView, {top: d.top + e.pageYOffset-c.clientTop, à esquerda: d.left + e.pageXOffset-c.clientLeft}): {top: 0, esquerda: 0}}, position: function () {if (this [0]) {var a, b, c = this [0], d = {top: 0, left: 0}; return "fixed" === r.css (c, "posição")? b = c.getBoundingClientRect () :( a = this.offsetParent (), b = this.offset (),B (a [0], "html") || (d = a.offset ()), d = {top: d.top + r.css (a [0], "borderTopWidth",! 0), à esquerda : d.left + r.css (a [0], "borderLeftWidth",! 0)}), {top: b.top-d.top-r.css (c, "marginTop",! 0), à esquerda : b.left-d.left-r.css (c, "marginLeft",! 0)}}}, offsetParent: function () {retorna this.map (function () {var a = this.offsetParent; while ( a && "static" === r.css (a, "position")) a = a.offsetParent; retorna a || ra})}}), r.each ({scrollLeft: "pageXOffset", scrollTop: "pageYOffset "}, função (a, b) {var c =" pageYOffset "=== b; r.fn [a] = função (d) {retorna T (esta, função (a, d, e) {var f; return r.isWindow (a)? f = a: 9 === a.nodeType && (f = a.defaultView), nulo 0 === e? f? f [b]: a [d]: nulo (f? f.scrollTo (c? f.pageXOffset: e, c? e: f.pageYOffset): a [d] = e)}, a, d, argumentos.length)}}), r.each (["top" , "esquerda"], função (a, b) {r.cssHooks [b] = Pa (o.pixelPosition, função (a, c) {se (c) retornar c = Oa (a, b), Ma.test (c)? r (a) .position () [b] + "px": c})}), r.each ({Height: "height", Width: "width"}, função (a, b) {r.each ({padding: "inner" + a, content : b, "": "externo" + a}, função (c, d) {r.fn [d] = função (e, f) {var g = argument.length && (c || "booleano"! = typeof e), h = c || (e ===! 0 || f ===! 0? "margin": "border"); retorna T (esta, função (b, c, e) {var f; return r.isWindow (b)? 0 === d.indexOf ("externo")? b ["interno" + a]: b.document.documentElement ["cliente" + a]: 9 === b.nodeType ? (f = b.documentElement, Math.max (b.body ["scroll" + a], f ["scroll" + a], b.body ["offset" + a], f ["offset" + a], f ["offset" + a] ], f ["cliente" + a])): void 0 === e? r.css (b, c, h): estilo r (b, c, e, h)}, b, g? e : void 0, g)}})}), r.fn.extend ({bind:function (a, b, c) {retorne this.on (a, null, b, c)}, desvincule: function (a, b) {retorne this.off (a, null, b)}, delegate: function ( a, b, c, d) {retorna this.on (b, a, c, d)}, desclassifica: function (a, b, c) {retorna 1 === argumentos.length? this.off (a, "**"): this.off (b, a || "**", c)}}), r.holdReady = função (a) {a? r.readyWait ++: r.ready (! 0)}, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, "função" == tipo de definição && define.amd && define ("jquery", [], função () {return r}); var Vb = a.jQuery, Wb = a. $; return r.noConflict = function (b) {return a. $ === r && (a. $ = Wb), b && a.jQuery === r && (a.jQuery = Vb ), r}, b || (a.jQuery = a. $ = r), r});"**"): this.off (b, a || "**", c)}}), r.holdReady = função (a) {a? r.readyWait ++: r.ready (! 0)}, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, "função" == tipo de definição && define.amd && define ("jquery", [], função () {return r}); var Vb = a.jQuery, Wb = a. $; return r.noConflict = function (b) {return a. $ === r && (a. $ = Wb), b && a.jQuery === r && (a.jQuery = Vb ), r}, b || (a.jQuery = a. $ = r), r});"**"): this.off (b, a || "**", c)}}), r.holdReady = função (a) {a? r.readyWait ++: r.ready (! 0)}, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, "função" == tipo de definição && define.amd && define ("jquery", [], função () {return r}); var Vb = a.jQuery, Wb = a. $; return r.noConflict = function (b) {return a. $ === r && (a. $ = Wb), b && a.jQuery === r && (a.jQuery = Vb ), r}, b || (a.jQuery = a. $ = r), r});b || (a.jQuery = a. $ = r), r});b || (a.jQuery = a. $ = r), r});